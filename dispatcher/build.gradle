apply plugin: 'scala'

sourceSets {
    main {
        scala {
            srcDirs = ['src/']
        }
        resources {
            srcDirs = ['src/']
        }
    }
}

dependencies {
    compile project(':common:scala')
}

mainClassName = "whisk.core.dispatcher.Dispatcher"
startScripts {
    doLast {
        def lines = unixScript.readLines()
        lines[lines.size()-1] = lines.last() + ' >> /logs/$1_logs.log 2>&1'
        unixScript.text = lines.join("\n")
    }
}

def imagename = project.name
task distDocker(dependsOn:[distTar, ':common:scala:distDocker'], type:Exec) {
    commandLine 'docker', 'build', '-t', 'whisk/' + imagename, '.'
}
task deleteImage(type:Exec) {
    ignoreExitValue = true
    commandLine 'docker', 'rmi', 'whisk/' + imagename
}
clean.dependsOn deleteImage