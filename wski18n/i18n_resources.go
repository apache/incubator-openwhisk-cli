/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Code generated by go-bindata.
// sources:
// wski18n/resources/de_DE.all.json
// wski18n/resources/en_US.all.json
// wski18n/resources/es_ES.all.json
// wski18n/resources/fr_FR.all.json
// wski18n/resources/it_IT.all.json
// wski18n/resources/ja_JA.all.json
// wski18n/resources/ko_KR.all.json
// wski18n/resources/pt_BR.all.json
// wski18n/resources/zh_Hans.all.json
// wski18n/resources/zh_Hant.all.json
// DO NOT EDIT!

package wski18n

import (
    "bytes"
    "compress/gzip"
    "fmt"
    "io"
    "io/ioutil"
    "os"
    "path/filepath"
    "strings"
    "time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
    gz, err := gzip.NewReader(bytes.NewBuffer(data))
    if err != nil {
        return nil, fmt.Errorf("Read %q: %v", name, err)
    }

    var buf bytes.Buffer
    _, err = io.Copy(&buf, gz)
    clErr := gz.Close()

    if err != nil {
        return nil, fmt.Errorf("Read %q: %v", name, err)
    }
    if clErr != nil {
        return nil, err
    }

    return buf.Bytes(), nil
}

type asset struct {
    bytes []byte
    info  os.FileInfo
}

type bindataFileInfo struct {
    name    string
    size    int64
    mode    os.FileMode
    modTime time.Time
}

func (fi bindataFileInfo) Name() string {
    return fi.name
}
func (fi bindataFileInfo) Size() int64 {
    return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
    return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
    return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
    return false
}
func (fi bindataFileInfo) Sys() interface{} {
    return nil
}

var _wski18nResourcesDe_deAllJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func wski18nResourcesDe_deAllJsonBytes() ([]byte, error) {
    return bindataRead(
        _wski18nResourcesDe_deAllJson,
        "wski18n/resources/de_DE.all.json",
    )
}

func wski18nResourcesDe_deAllJson() (*asset, error) {
    bytes, err := wski18nResourcesDe_deAllJsonBytes()
    if err != nil {
        return nil, err
    }

    info := bindataFileInfo{name: "wski18n/resources/de_DE.all.json", size: 0, mode: os.FileMode(420), modTime: time.Unix(1502980774, 0)}
    a := &asset{bytes: bytes, info: info}
    return a, nil
}

var _wski18nResourcesEn_usAllJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x7d\x4f\x73\xdb\x38\xd2\xf7\x7d\x3e\x45\x57\x2e\x76\xde\x92\x9d\xdd\xd3\x5b\x4f\x52\x73\xd0\x24\x9e\x8d\x37\x89\xed\x8a\x9d\xd9\x9d\xda\x6c\x8d\x20\x12\x92\xb0\xa6\x00\x0e\x00\x5a\x51\xb2\xfe\xee\x4f\x01\x20\x29\x52\xc2\x5f\x52\x4e\x9e\x53\x1c\xb1\xfb\xd7\x0d\xa0\x01\x34\x1a\x0d\xe0\x5f\x3f\x01\x7c\xfb\x09\x00\xe0\x19\xc9\x9f\xbd\x84\x67\xd3\xb2\x2c\x48\x86\x24\x61\x14\xf0\x17\x22\x71\x0e\x15\xc5\x5f\x4a\x9c\x49\x9c\x17\xdb\x67\x13\x43\x2c\x39\xa2\xa2\xd0\x64\x31\x5c\x3f\x01\x3c\x4e\xf6\x45\x7d\xac\x28\x9c\x7c\xfb\x76\x7e\x85\xd6\xf8\xf1\x11\xce\xce\x56\xb8\x28\x4f\x60\xc1\x38\x54\x02\x2d\xf1\xf9\x67\xea\x10\x17\xc3\x69\x15\x89\x39\x67\xfc\x25\x38\x60\x9b\xaf\x56\x56\xca\x24\x08\x2c\x1d\xac\xcd\x57\x2b\xeb\x75\x89\xe9\x3f\x56\x44\xdc\x43\x56\xb0\x2a\x87\x8c\xad\xcb\x4a\x12\xba\x54\x7f\xad\x11\xcd\xa1\x20\x14\x03\xa1\x12\xf3\x05\xca\xf0\xb9\x43\x48\x3a\x8e\x55\x9d\x07\xcc\xe7\x4c\x60\x60\x95\x2c\x2b\x57\x81\xf6\x88\xac\x40\x39\x9e\x57\x4b\x28\xf0\x03\x2e\xfc\x60\x16\x42\x2b\x20\xaa\xe4\x8a\x71\xf2\xd5\x18\xd2\xec\xdd\xc5\xef\x33\x07\xa2\x8d\xd2\x0a\xb9\xd1\xf5\x35\xbd\xb9\x84\xd9\xdb\xeb\xdb\x3b\x17\xde\x01\x59\x08\xec\xb7\x8b\x8f\xb7\x97\xd7\x57\x11\x78\x2d\xa5\x15\x72\xbe\x2d\x91\x10\x90\x61\x2e\xc9\x42\x75\x21\x0c\xd9\x0a\x67\xf7\x84\x2e\x1d\xd0\x3e\x0e\xab\x88\x4f\x14\xcd\x0b\x0c\x92\x01\xa1\x44\x12\x54\x90\xaf\x18\x04\xe6\x0f\x98\x43\xc6\x28\xc5\x99\x82\x7e\x09\xdf\xbe\x9d\x63\xce\x1f\x1f\x1d\x72\x93\x61\xac\xca\xdc\x20\x8e\xd6\x58\x62\x0e\x88\x2f\xab\x35\xa6\x52\xc0\xba\x12\x12\xe6\x18\x10\xdc\xe3\x2d\x3c\xa0\xa2\xc2\x50\x22\xc2\x35\x16\xe2\x4b\xe1\xd4\x69\x28\x9a\x55\xb5\x29\xa5\x4c\x1a\x83\x3a\x86\x6e\x83\xe1\xac\xca\xfd\x8a\x48\x81\x73\x55\xfb\x25\xe2\x02\xef\x20\x83\xed\x16\xc3\x69\xb7\x76\xc6\xef\x61\x43\xe4\x0a\x28\x5a\x63\x51\xa2\x0c\x0b\x97\xb9\xdb\x48\xad\xa0\x05\x11\x12\x30\x95\x44\x12\x2c\x80\x50\x90\x2b\x0c\x59\xc5\x39\xa6\x72\xc7\xec\x10\x13\xc9\x1c\xe8\x05\x6c\x2e\x51\xcd\xab\x01\xd9\x02\xd0\x03\x22\x85\xfe\xbe\xd3\x3f\xa1\x43\xa4\x23\x5a\x55\x5c\x62\x09\x92\x93\xe5\x12\x73\x31\x01\xa4\xfb\x93\xfa\x83\xe6\xc0\xab\x62\x57\x62\x8e\x97\x44\x48\xbe\xd5\x13\x1e\x0a\xd6\xda\x68\x58\xab\xb2\x6a\xfe\xa5\x7a\xfe\x3d\x01\x22\x40\x4d\x80\x48\x19\x34\xc9\xe1\xcf\x0a\x15\x64\x41\x70\xae\x31\x82\xf5\x38\x04\x29\xbd\x89\x5b\xb3\x51\xa5\x6b\xcb\x06\x8d\x70\xfd\xbf\xc7\xc7\x93\x71\xad\x9e\x2e\xc4\x5a\x90\x8b\x8e\x89\xb7\x7c\x9a\xa9\x83\xe2\xf4\x8e\x62\xb9\xdd\xfd\xd3\x66\xbc\xbe\x2e\x69\xa5\x0f\x8c\x29\x25\xca\xee\xd1\x32\x62\x44\x69\x09\xed\xf3\x27\xa1\xb9\x1a\xd8\xcc\x34\x20\x54\xbb\xa0\x86\xc5\x35\x81\xfa\x58\xac\x42\x2e\xa9\x31\xc7\xf2\x60\xba\xd1\x4d\xab\x7f\x8e\xb1\x9d\x74\x1c\xaf\x3a\xe8\x70\x86\xd1\x38\xbb\xdf\x53\x94\x4a\x45\xb3\xaa\xf6\x0b\xa1\xb9\x76\x48\x39\x36\x50\x0b\x3d\xfb\x04\x95\x08\xf3\x59\xc5\x7d\xfb\x76\xce\xee\x1f\x1f\x0d\x1b\xce\x61\x5e\xc3\xb4\x23\x8a\xb3\x93\xc4\x70\x5a\x45\x1a\x06\x35\x3e\xe2\x4d\xc0\xd0\xac\xa4\x81\x91\xab\xe6\xa9\xa9\xa1\x33\x36\x26\x8c\x4c\x51\x20\x51\x15\xda\x40\xa4\x57\xa8\x8d\xd3\x2a\xb2\x2a\x73\x5d\x4b\x7a\xe5\x28\xf4\x72\xa6\xe6\x9d\x00\xe3\xd0\x56\x62\x03\x48\x16\x40\x24\xe4\x0c\x9b\xa9\x42\x33\x39\x74\x3a\x0a\xb4\xc3\x8d\x35\x1c\xb5\x84\x48\x2b\x0f\x71\x79\x9b\xc4\x30\x0d\x69\x12\x1f\xa7\xd3\x11\xf1\x9b\x76\x97\x22\x60\xd1\x1d\xd2\x81\xe6\x1c\x46\xf0\x56\xdc\x92\xc9\x01\x95\xe6\xe2\x72\xac\x84\x0b\xbc\xeb\x70\xce\x55\x70\x8f\x28\x50\x6d\x7d\xea\x81\x35\x17\x05\xe2\xad\x3c\x83\x30\xc4\xea\x7c\x9c\x1e\xd7\xa3\x28\x42\xae\xc1\x21\x9d\x15\xee\x8a\xd5\x4e\xe4\xce\x0f\xcb\xb1\xd4\x11\xa9\x73\xd0\x11\xa4\x8d\xb8\x87\x92\xb3\x12\x73\xb9\x05\x81\x25\x9c\x9d\xb5\xb4\x27\x6a\x80\xc0\x54\x54\x1c\x6b\x0f\x4f\x7d\xd8\xcd\x8b\x44\x40\xc9\x71\x86\x73\x35\x73\x6c\x01\xc1\xe7\x67\x2f\x3e\x3f\x73\xe8\xfb\x03\x14\x49\x77\x8f\x9b\xba\x74\x78\xae\xa3\x3d\xe3\x24\x7c\xab\xfa\x1c\x2f\x38\x16\xad\x3f\xd8\xcc\xd8\x2e\x2b\x71\x92\x7b\xc7\xf3\x86\xcb\xa9\x65\xea\x50\x3f\x00\xd0\xd5\x1f\x0d\x43\x83\x88\x73\x10\x55\x96\x61\x21\x16\x55\x51\x6c\x7d\xdd\x31\xc4\xe8\xf1\x73\x5a\xc7\x48\xbc\xf4\x3a\x39\x5d\x3a\xcf\x2c\x1f\x86\x3b\xa4\xf3\x0c\xb8\x61\xb8\x43\x3a\x2b\xdc\xdd\x6a\x37\x48\xb6\x2d\x86\x91\x54\x9d\xae\x5e\x92\x92\x75\x59\x60\xd5\xe7\x70\xde\x2c\x98\x25\xe2\x6a\x6a\xca\x71\x59\xb0\xad\xfa\xe4\x50\xe2\x58\xe8\x47\xb1\x5c\xc8\x2b\xdd\x47\x77\xf1\x79\x78\x7b\x77\x77\x03\x42\x22\x59\x09\xc8\x58\x6e\xd6\x8a\xea\x8f\xa3\x59\x77\xa2\x50\x7b\x70\x78\xb7\x3e\xd1\x71\x33\xbd\xbe\x9d\xbd\xbb\xf8\x1d\x7e\x9b\xbe\xff\x74\x31\x53\x4a\xac\x91\xab\x0d\x62\xb9\xad\xa2\x67\xbf\x5e\xbe\xbf\x98\x41\xc6\xa8\x1a\xd7\x94\x1b\x69\x85\xfb\xfb\xed\xf5\x95\x5f\x8b\x01\x40\x7b\x0a\x51\x26\xf1\x99\x64\x67\x0d\x30\xe3\x42\x01\xbf\xb9\x86\xab\xeb\x3b\xb8\xfb\x38\xbd\xba\x7d\x3f\xbd\xbb\x80\xbb\xb7\x17\x70\xb2\xc5\xe2\x04\xa6\x57\x6f\xe0\x84\xb2\x93\x73\x80\xbb\xb7\xd7\xb7\x17\x30\xfd\x78\x01\xbf\x5e\xfe\xf3\xe2\x0d\xbc\x7e\x7f\x09\xd3\x8f\x7f\xfb\xf4\xe1\xe2\xea\xce\xd4\xc3\x6d\xa3\xb8\x29\x78\x63\xb5\x0f\x44\x90\x39\x29\x88\xdc\xc2\xec\xf6\xf5\xf5\xcd\xc5\xec\x15\x6c\xb1\x80\x9f\x41\xac\x10\xc7\xf9\x04\x28\x83\x9f\xa1\xe4\xe4\x01\x49\x97\xff\x33\x10\xcc\xda\x22\xa2\x5a\xaf\x11\x27\x5f\x77\x1d\x2b\xc7\x12\x91\x42\xbc\xea\xae\xec\x4d\xfc\x80\xe3\x05\xf9\x02\x9f\x9f\xfd\xbf\xcf\xcf\x00\x71\x0c\x73\x56\xd1\xdc\xa1\xe3\x78\x5c\xab\xba\x84\x66\x45\x95\x63\x28\xab\x79\x41\xb2\x62\x5b\x97\xf4\x20\x96\xc9\xb1\xa8\x0a\x97\xf1\x24\x82\xd8\x37\xc0\xbe\x18\x0c\x45\xb7\x20\x5c\x48\x98\xdd\xbe\xbb\xbc\x99\x01\xad\xd6\x73\xcc\xfb\x33\x35\x67\xeb\xb0\x56\x63\x10\xad\x2a\x32\x5a\x6c\x81\x63\x59\x71\x0a\xb3\xf7\x97\x1f\x2e\xef\xfc\x58\x19\x2b\x0a\xb3\xf7\xe0\xd0\x70\x04\xa0\x55\xc1\xc6\x53\x73\x99\x79\xf3\x39\x10\x00\x33\x5b\x44\x35\x35\x89\x08\x84\x1d\x30\xd8\x7b\x86\x5a\x2c\xf9\x35\xec\x91\x04\x5c\x45\x45\xab\x2a\xa5\x75\x4f\xf5\x28\x95\xe0\x0b\x06\x01\xfc\x71\x88\x82\x28\x37\x37\xc3\x5c\xef\xaf\xda\xfc\xe5\xa5\xf6\x97\x15\xc5\x89\x91\x57\xfb\xc9\x78\x63\x44\xb9\xb7\x91\x8f\x2c\x24\xa6\x20\xf7\x78\xeb\x17\x71\x8f\xb7\x23\x8b\x31\x4e\x84\xb7\x10\xc6\x02\x51\x25\x57\x7e\x09\x8a\x62\x68\x29\x8e\x23\x23\xc2\xaa\xa7\x37\x97\xb0\x62\x42\x1a\xa6\x57\x1a\xa3\xff\x9b\x09\x7f\x96\x44\xfd\x52\x6f\x4e\x10\x13\x2c\x4d\xb4\xff\x23\x89\x8a\x68\x9b\x16\x55\x77\x3b\xa6\x78\x0d\x64\x64\xbd\xfb\xf8\x23\xc5\x3f\x60\x2e\x94\x3b\xb3\x43\xa8\x7f\x49\x52\xc2\x8f\x62\xdf\xbf\xad\xe4\x4a\xcd\x85\x99\x5e\x40\x54\x02\xf3\x5d\x28\x6f\x85\x1e\xb0\xdd\x43\x7d\xa5\x45\x34\x09\x14\x91\xab\xbb\x27\x11\x65\x8f\x62\x58\xbd\xea\x66\xd5\x60\xd9\x7d\x2a\x70\x1e\xde\xb5\x19\x8b\x1a\x61\x0a\xbb\x1a\xd8\x35\x61\x64\xe4\x28\x02\x60\xd0\xac\x75\x2a\x9e\x8f\x9e\xb8\xfa\x18\xf6\xa5\x2e\x8d\x98\x83\xf7\x88\x02\xe5\x31\xd4\xa3\xe6\xe1\x08\x88\xe8\x99\x58\x63\xa5\xcd\xab\x2d\x4b\xec\x2c\x99\x26\xa3\xc7\x11\x3b\x87\x45\x8a\xb0\x71\x24\x75\x00\xcd\x95\x68\xf3\x86\x27\x65\xc4\x4f\x2a\xcd\x21\x57\xe2\xe8\x1e\x5f\xa6\x43\x2e\xab\x28\x33\x2b\xe6\x78\x81\xaa\xa2\x99\x14\xd9\x42\x19\x67\xfd\x9b\x02\x24\x45\x01\x73\xac\x06\xdc\xdc\x5d\xd2\x21\x48\x6e\x95\x9a\x18\xcd\x1e\xa0\x5c\x21\x09\x19\xa2\x91\xea\x24\xa0\xb8\x77\x64\xfc\x23\xca\x32\x38\x9e\x74\xfa\xa3\x2b\x98\xd7\xa1\xf0\x41\xdc\x63\x97\x16\x1d\x02\x4f\x0a\x9d\xea\x4c\xde\xcc\x39\x4d\x10\xc8\xc1\x53\xf6\x1b\x4c\xbf\xd3\x44\x01\xa0\xda\x3a\x83\x58\x0d\x9d\x07\x2e\x94\x8b\xb3\x4f\xe5\x81\x7a\xfd\x3e\x4e\xb3\x2e\x9d\x63\x1a\xb9\xa7\x6c\xe3\x02\x69\xbe\x06\xea\x68\x5e\x91\xc2\x15\x34\xd9\xa7\x8a\x81\xaa\x57\xe0\x71\x88\x0d\x71\xdc\xb6\xc6\x8e\x8d\x50\x13\x44\x4b\x4b\x6f\x8c\x84\x89\xc8\x60\x75\x77\x93\x43\xba\xa8\x4a\x8b\xb5\xd4\x3e\xb5\x5d\xd3\xa2\x08\x07\x1f\xf6\x88\x3c\x3a\xce\xae\xa6\x1f\x2e\x6e\x6f\xa6\xaf\x2f\xfc\x29\xb1\x5d\xba\x40\x73\x16\x4c\x27\xb7\xee\xe4\xc3\x82\x14\xc6\x63\x55\x7f\xa4\x6f\x4b\x25\x03\x06\x14\xe4\x18\xe5\x5d\x8f\xea\x08\x2a\x0e\x80\x0c\x28\x89\xf4\x56\x0f\x64\x8c\x2e\xc8\xb2\xe2\xc6\xe0\x76\xe8\x09\xba\xc5\x23\x79\xb3\x96\xb4\xdb\x81\xf2\x9c\x2b\xb0\x93\x76\x81\x19\x9f\xa8\x14\x01\x60\x55\xe0\x1f\x7b\xf1\x33\x53\xb1\x1b\x4e\xea\x54\x8c\x8a\x87\xfd\xe9\x34\x8c\x40\x04\x50\x67\x5f\x06\xc3\x7e\x86\xca\x1e\xcd\x35\x6d\xa3\x28\x5c\xd1\xd9\x0e\x45\xc0\x50\x3a\xa4\x03\xb7\x7d\xc3\x08\x5e\x27\xd3\xb0\x9b\xa4\xd4\x84\xd5\xa2\x93\xcd\xbe\x71\x48\x44\xa8\xce\x7a\x24\xa1\x2c\x8d\x0e\xed\xd0\x1c\x8d\x30\x84\x3f\x43\xc3\xf0\x27\xd7\x9b\x9b\xcf\xe9\x81\x6a\x4a\xb3\x67\xe7\x71\x42\xbb\x54\x11\xb9\x41\x23\xaa\x2e\xc0\x1e\x21\xbc\xde\x80\x64\x8b\xb1\x6a\x44\x01\x79\xdb\xb1\xdf\x0c\x6a\xb9\xf0\xed\xdb\xb9\x81\x8d\x68\xcd\x10\xb7\x2f\x97\x91\xe2\x8d\xaf\x3f\xec\x53\xc5\x65\x30\x8e\xa8\xcf\x30\x42\x54\xee\x62\x62\x7f\x70\xb2\xc5\x66\x2d\x2a\xc6\x7e\x5e\xa1\x86\x1a\x97\xaf\x98\x02\x1a\x0a\x22\x19\xf4\x11\x0d\x13\x46\x88\xca\x60\x4c\x6c\x18\x27\x9b\x77\x9c\x0a\x0c\x50\x61\xdf\x4e\x72\x82\x1f\x46\x55\x57\x0c\x46\x30\x73\x31\xb1\xb2\xac\x2c\xbe\x9c\x45\xdf\x44\xd8\xa1\x88\xcb\x56\x1c\x33\x0d\x06\x11\xa2\xf2\x14\x53\x27\x41\x17\x9b\x3f\x43\xd1\xe7\xb9\xed\x11\xa5\x45\xf5\x0f\x36\x7d\x9c\x25\x48\x82\x48\xcf\x07\x34\x27\x83\x9e\x28\x19\x30\x1e\xfc\x87\x66\xbf\x68\xa3\x38\x4a\xea\xcb\x10\x24\x57\x7c\x81\xad\x91\x24\x19\x2a\x8a\x6d\xcf\xe1\x46\x0b\x89\xeb\x59\x42\xcd\x1b\xc4\x99\x08\x95\x80\x10\xa1\x42\xcf\x7b\x9d\xe3\x05\xe3\xd8\x74\xaa\x04\x25\x42\x18\x81\x0c\x20\xcd\x56\xa7\xe9\x04\xd3\x7a\x7a\xc4\x81\xf5\x99\x32\x59\x91\xdf\x07\x57\x68\x0d\x9d\x23\xf5\x47\x48\x35\x1a\xdc\xbe\x79\x07\x88\x4b\xb2\x40\x99\x74\xa9\x69\xa7\x8d\x87\x9d\xc0\x46\x87\x9a\xcd\x3a\xf9\xf5\xf5\x87\x9b\xeb\x2b\x65\xdc\x75\x66\x19\x52\xf5\xca\xb2\x7b\xcc\x27\x40\x58\x7d\x04\x70\x8e\xc4\x4a\x35\x47\x8a\x4a\x29\x72\xae\x6f\xf7\xe4\x38\x13\x30\x95\x88\x8c\xad\x4b\x46\x31\x95\xbd\x14\xe7\x35\x11\x82\xd0\xe5\x39\x5c\x53\xdc\x21\x39\xed\x15\x86\xf1\x56\xc6\xf3\xf6\x9c\xad\x28\x71\xa6\x0f\x10\x7a\x52\x33\x9f\x56\x6e\x70\x11\x42\x31\x57\x4e\xd5\xd0\xa5\x87\x97\xdd\x7e\x64\x0e\x89\xd5\x1f\xaa\x34\xaa\x87\x31\xfa\xc7\x5a\xb8\x8e\x9a\xab\xda\x51\xd4\xa0\x0a\x77\xb6\x63\x01\x91\x71\x52\x4a\x38\x6d\x85\x3e\x37\x33\x8f\xb6\x95\x5d\x0a\x6b\x73\x34\x37\x27\x1c\x67\x92\xf1\xed\xf9\x67\x7a\xd7\xc6\x09\x7a\x97\x16\x74\xc0\xd9\x02\x36\xe2\xbe\xf9\x2c\x26\x20\x58\xc5\x33\x93\xe4\xa1\x14\x81\x43\x45\x08\x95\x0c\xb6\xac\x32\x4d\x01\x98\x3e\x10\xce\xa8\x6a\x46\xd7\xe4\xe7\x69\xf8\x13\x9d\x88\x5a\xff\xdc\x9f\x54\xcf\xe1\x37\x6d\xf2\xed\xe7\x83\x4e\x15\xd3\xa7\xbe\x8f\x6c\x67\xb1\x75\xc8\x6a\xb7\x54\x44\x05\xc7\x28\xdf\x9a\x35\x84\x38\x07\x78\x63\x3c\x31\x22\xcd\x11\x61\x2c\xf9\xd6\x75\x23\xc5\x60\x38\xa7\x72\xfd\xf2\xeb\x6a\xaa\xcd\x2a\xe9\x3c\xe1\x20\x28\xa7\x52\xa6\x8e\x41\xdc\xab\xa2\x30\x6a\xb6\xf2\x36\x1d\x7b\x47\xd2\x61\xef\x1e\xf5\x46\x80\x5a\x15\x7d\xc3\x36\xb4\x60\x28\xc7\x39\xec\x2e\x0a\x21\xd7\xb7\x20\x24\xe2\xfa\xac\x69\x59\x9e\xc3\x27\xfa\x95\x94\xdd\xe6\xa2\x39\xb0\x12\xd3\x26\xe8\xfc\x1f\x9c\xe9\x0c\x90\x7f\x66\x2c\xf7\x64\x6b\x3d\x91\xb0\xd8\x45\x99\xea\x26\x15\x2f\x4a\x24\x57\xaa\x93\xdc\xbe\x79\x37\x64\x59\xe6\x45\xb1\xaa\x72\x6b\xae\xbb\x58\xb4\x57\x2a\x08\x4c\x4d\xbc\xfe\xa0\xe3\xc6\xe8\x34\x18\xce\x7e\x6a\x9c\x73\xd6\xf1\xdf\x94\xbd\xf7\xfb\x66\x50\x9f\x14\x04\x9f\x0a\xac\xdc\x2a\xfe\xfa\x72\x10\x8e\x45\xc9\xa8\xc0\x66\x94\x56\x80\xb1\x8a\x24\xe0\xb8\xfb\x6e\xd3\x6d\x8e\x38\xe4\x0d\xc7\xf4\xd4\x5a\x45\xff\xf6\x95\x94\xa5\x2a\xf0\xa0\x66\x8b\xe1\xf7\x8a\x97\x88\xf3\x11\xd2\x83\xec\x21\x6f\xbb\xbe\xa2\x22\xec\x6e\x37\x84\x56\xc0\x05\xe1\xb8\x21\x01\xfc\xe0\x3e\x95\x63\x21\x0c\x0c\x3f\x3d\x8e\x61\xfe\x5a\x04\x84\x37\xcc\x51\xb3\xe2\x1c\x5e\xf4\xef\x73\x78\xb1\xb3\x44\x5d\x49\x24\x57\x88\x24\x8f\x88\x81\x0c\xc3\x0c\x05\x94\x6b\xd4\x70\x4c\xb9\x21\xfc\xa1\x4b\xfd\x66\x6f\xf1\xec\xac\x3e\x54\xd1\x7a\x64\x9d\xf4\x5c\xbe\x7c\x40\x85\xce\xe3\x34\xc4\x9d\xe5\x8e\xd1\x80\x71\xad\x40\x60\xff\xf2\x38\x32\xe2\xa2\xf0\xe3\xac\x35\x0a\x24\x2a\x16\xdf\x40\xa4\x87\xe3\x6d\x9c\xb1\x11\xf9\x9a\xb7\x1f\x3f\x6f\x00\xc7\xc5\xe5\x11\x1d\x80\x1e\x17\xa0\x1f\xd7\x66\x51\x20\x51\x61\xfa\xf4\x36\xf3\x71\x3a\x83\xf5\xfe\x81\xa2\x4b\x11\xb1\x9f\x37\xae\xee\xc2\x08\xc1\x70\x7d\x7a\xa5\xb9\xb8\x7c\x41\x7b\x7f\x9d\xed\x11\xc5\x85\xee\xc7\xd5\x5c\x14\x48\x54\x00\x3f\xbd\x02\x7d\x9c\xfe\x30\x7e\xc0\xe5\x38\xa4\x4b\x8f\xa3\x37\xac\x4f\x15\x4a\x4f\xc2\x0f\xa8\x4f\xe8\x03\xbb\xef\x37\xa2\xfa\xbb\x3d\xca\x8b\xd5\x9c\xa5\x0f\xc6\x99\x74\x24\x8c\xf3\xf6\x64\x83\xfe\x58\x1f\x20\x68\x32\x84\x22\xd6\xe9\xdf\x49\xf8\x0f\xf5\x2d\x9a\x22\x1d\x65\x27\x61\x20\x98\xb5\xe5\x1b\x2c\x5d\x7d\xb3\xe9\xeb\xbb\xcb\xeb\xab\x3f\xae\xa6\x1f\x9c\x29\x7c\x1e\x86\x40\x8c\xbe\xe1\x3c\xf6\x29\xdd\xa1\xb8\xf6\x83\x9d\xed\xb5\x5c\x03\x0e\x98\x47\x32\x47\x9e\x2f\xb7\xa1\x0d\x39\x5e\x1e\xc2\xb1\x1f\xa4\x3a\xb8\xae\x52\xc7\x62\x41\x60\x05\x27\x95\x71\xa9\x25\x6d\xf3\xf1\xcf\x8a\xe9\x6b\x0b\x16\x6a\x60\xda\x36\xd2\xc1\x1c\x15\x72\x2d\xa3\x8f\x2b\xc3\xb9\xfa\x6f\x5d\xec\x99\x71\xae\x1f\x1f\x67\x29\xc7\xf8\x92\x20\x06\x2a\xa1\xdb\xe3\x08\x9a\xec\xe3\x38\xce\x2e\x7b\x4f\xe8\x7b\x8f\xdc\xeb\x71\xc5\xd5\x23\xcd\x47\x7f\xcc\xb9\xbb\x51\xdd\xf7\x8c\x83\xf1\x65\x1f\x6b\x4c\x30\xcc\x04\x47\x0e\xb0\x52\x23\x62\x61\x18\x8f\x32\xac\xc4\xba\x4f\x8e\xd1\x24\x16\x23\x78\x9e\x6c\x90\x0e\x09\x00\x21\x4f\xa9\xc4\x54\xf4\x2f\x0a\xd1\x41\xa4\x3a\x82\x95\xe2\x13\x45\x23\xc5\xad\x98\x77\xb1\x3d\x85\x99\x13\xae\x20\x37\x2b\x55\xd2\x16\x74\xdc\x72\x7a\x84\x84\x88\x5a\x05\x85\x80\xf3\x7e\xd6\xf8\xf1\xca\x70\x04\x11\x71\xed\xf0\x44\xfa\x8f\x43\x8f\xe8\xdd\x12\xf1\xb1\x9d\x3b\x00\xe1\x51\x82\x63\x94\x8f\x54\x22\x12\xe2\x08\x9d\xa9\x09\x18\x3f\x5d\x67\xf2\x4b\x18\x69\x87\x47\x51\x7f\x20\x7a\x70\x78\x1f\x64\x00\x09\x00\x51\x0a\xf4\x26\xed\x83\x0b\xa0\x5a\x09\x72\x5b\x62\xe7\x22\x7f\x1c\x66\x60\xcb\xa1\xbe\x0b\x3b\xb8\xe3\xd0\xd0\xf9\x62\xde\xe6\x96\x57\xe4\xbb\x88\xc6\x46\x19\xa8\xc8\xfa\xca\x76\xb3\xee\x6d\x12\x26\xe2\xef\x7e\x1f\x00\x14\xd7\x2b\x3a\x2b\xf1\xc1\xb6\xef\xc5\x88\x8a\x2a\xd7\x08\xe9\x41\x65\x0b\x63\x6c\x4c\xd9\xb0\xf6\x82\xbe\xb4\xc1\x1b\x19\x52\x4e\x45\x8e\x0b\x27\xa3\xd4\xe7\x1d\x5c\x7c\x51\x41\xe3\xe4\x26\xf1\x30\x3a\x12\xdf\x74\x9c\xc8\xdb\xd1\xfa\x34\x71\x51\xaf\x51\x16\x1d\x83\xe1\xad\x3e\x03\x70\xcc\x5d\xbd\x21\x88\xce\x18\xbd\xb7\xb6\x3b\x04\x11\x11\xfa\x64\x73\xb4\x32\xd9\x33\x53\x7d\x5a\xfa\x34\xec\x86\xe2\x93\x0d\xd8\xc1\xe4\x0b\xdf\x7b\x15\xed\xd3\xc4\x05\xef\x47\x19\x6f\x0c\x46\x54\xe8\x3e\xb9\xea\x3c\x8c\xfe\xc0\x7d\x3d\x21\x03\xa1\xdd\x87\x2a\xd4\xc8\xd9\x7c\xa9\x23\x44\x26\x17\x31\xf4\x22\xc0\x78\xdc\xf4\x8d\x81\x06\xf0\x89\xf6\x05\x52\xe0\xad\xca\xbf\x66\x55\x91\xeb\xc9\x66\x41\x68\x0e\x27\x6b\x44\xe8\x09\xac\xb1\x5c\x31\x5d\xf6\x0e\x94\x43\xbf\x14\x84\xe8\x81\x63\xc4\xce\x5e\xba\x81\xff\xba\x1f\x7a\xda\x7b\x9e\x44\xbb\x9a\x8c\x1f\x4e\xcd\x41\xcd\x8e\x81\x1c\x73\x3a\x7d\xe8\xc1\x25\x27\xab\x55\xa8\xb5\x20\xa2\x2a\x4b\xc6\x3b\xdd\x9b\x57\x54\x92\xb5\xab\x0f\xa6\x61\xb8\x3d\xf1\x7a\x73\xbe\xa6\xd7\x97\x3a\x22\x38\xff\x4a\xca\x36\x7d\x1d\x38\xfe\xb3\x22\x1c\x8b\x3a\x4b\x5b\xe7\x98\xe9\xe4\x62\xc3\x73\xaf\xac\x15\x7f\x29\x0b\x92\x11\xe9\x7c\xf2\xee\x89\x84\x59\x0b\xf6\x77\xf4\x80\xda\x1e\x5d\x03\xc2\xd9\xd9\x5a\x77\x7a\xd6\x20\x9b\x2b\x38\xab\xa2\xd8\x9e\xf5\xdf\xcd\xd1\xfb\x84\x2b\x0c\x9a\x3e\x2b\x90\x70\xad\x78\x8e\x2f\xc7\xb1\xef\x84\x91\x04\xb3\x7d\x04\x48\x00\x45\x92\x3c\xb4\x35\x72\xda\x46\x16\x4b\xce\x1e\x48\x8e\x05\x20\x9d\xf4\x8c\x24\x51\xf6\x89\xbf\xe0\xac\x92\xad\xa9\x56\xf4\xb9\x73\xb7\xea\xc8\x62\xec\x4b\x04\xd1\x22\xe4\x4d\x4e\x2f\x59\xa3\x25\x86\x53\x35\x3d\xc8\x15\x30\x0a\x6f\xf4\xef\x6f\xab\xf9\xf3\x1a\xac\x63\x02\xae\x05\xc2\x68\xdc\xa8\xba\x6f\xaf\x94\x57\x73\xc6\xc1\x62\x24\xb2\x66\x03\x20\x51\x8a\xec\x6d\xff\x80\xc0\x7f\x56\x98\x66\xb8\x3b\x99\xb5\x9e\x76\xa4\x5e\x69\x98\x76\x35\x57\x18\x66\xef\x2e\xaf\xde\xcc\x1a\xeb\xee\x8f\x44\x70\x8a\xbf\xa0\x75\x59\xe0\x97\x20\x36\x64\x21\x5f\xd6\x17\x3c\x4d\x80\xb2\x1c\xff\x47\x34\xff\x77\x1a\xe9\xd1\xf0\x9d\xea\x77\xbb\x66\x0d\x8e\xa9\xe4\x5b\x28\x19\xa1\x12\x4e\x17\x15\x35\xbf\x32\x7e\xd0\xad\xeb\xd9\x5a\x43\x6c\x56\x98\x02\x32\x2f\x7d\xce\x0b\xec\x2b\xd1\x93\x89\xf4\xf8\xfd\xc7\xd9\x5f\x1f\x86\xe5\xac\x7b\xd5\x84\xac\x92\xed\xbd\xc3\x84\xc2\x9a\x14\x05\x11\x38\x63\x34\x17\xf5\x99\xbb\xcd\x8a\x64\xab\x6e\x65\x11\x01\x12\xf3\x35\xa1\xca\x6c\x3d\xf5\x7c\x14\x78\xa7\xf2\x6b\xf4\x85\xac\xab\x35\xac\xf1\x9a\xf1\x6d\x57\xc8\x87\x5f\xb4\x63\x19\x1c\xc4\x52\x51\x82\xaa\x14\x6c\x09\x82\x7c\xc5\x63\x95\x89\xc3\xb1\x1f\x9f\x2a\x98\x7e\x6c\xd3\x3f\x14\xed\x53\xc5\x40\xbd\x02\xb1\x62\x1b\xd0\xf7\x55\x2b\x0d\x1e\xcc\x39\x15\x73\x59\x36\x9c\x56\xb4\xc0\x42\xec\x6e\x93\x43\xcd\x8d\x33\xae\x9e\x78\x34\x78\xab\xf2\x11\x17\x7f\xb7\x8b\x90\x63\xdd\x24\xee\x02\xb4\x2a\xe8\xbf\xf7\xfb\x00\x6a\xe4\x3d\xe2\x3e\xbc\x40\x72\x4c\xdd\x2b\x13\x73\x58\x26\xea\x87\xde\x2f\x3a\x63\x62\x41\xa8\x7e\x9a\x35\x9c\x3b\xf3\x44\x62\x23\x62\xee\xc6\xf2\xe2\xe2\xee\x0d\xad\x27\x20\x10\x44\x3c\x20\x1b\x74\x28\x7f\xe0\x41\xfc\x81\xb1\x81\x5a\xd5\xa7\x8c\x0f\xa4\x88\xf0\x86\x06\x0d\x50\x20\x3c\x58\x13\x45\xae\xf4\x0d\xf5\x80\x15\xfe\x01\x63\x92\x40\x5d\x7a\x92\x0f\x0b\x2e\x78\x20\x9c\x7e\x4b\x7f\x10\x56\x2d\xe1\x0e\xd8\x9e\x76\xae\xf4\x01\x24\x15\xba\x72\x00\x1e\x1f\x9f\x3b\x23\x6d\x47\x15\x11\x15\x3b\xad\xa5\xc5\x86\xa9\x9d\x6c\xee\x7c\x71\x65\xc5\x6c\x29\xea\xc5\x46\x94\xfd\xb9\x79\x22\xac\x43\x33\x2e\xea\x18\xe0\x20\xbb\xf4\x23\x0c\x53\x61\xb0\xa5\xc6\x62\x45\xa8\xd5\x31\xa9\xc1\x75\x13\xc2\x18\xaa\xc6\xe0\xfa\x89\x47\xb3\x67\xd8\xb1\xa2\xd0\x51\x62\x42\x2b\x56\x89\xc2\x3c\xa7\xac\xfc\xcd\x35\x16\x62\xf7\xd2\x48\x7d\xac\x57\xb9\x14\x15\xa5\xbb\xd5\xb2\x6b\x0e\x1b\x8f\x6b\x55\xf7\x46\xc1\x06\xd7\x1a\xfb\x54\xf6\x14\x14\xaa\x16\x1b\xaf\x25\x2f\xce\x32\x7d\x1d\xe0\x17\xe2\x4c\xec\xb3\xd3\x3a\x35\xd4\xe7\x0a\xfb\x0d\xa2\xcc\xd8\x39\xba\xf8\x79\xac\x62\x3e\xd3\x69\xdf\xfc\x3a\x23\xa2\x6a\x78\xf7\x18\x1b\xc3\x69\xcf\xb3\xed\x68\xa6\xa6\xe5\x36\xd2\xdb\xa4\xb7\x22\xda\xf5\xd4\xdd\xb9\xb4\xc9\x38\x63\x1c\xfa\xd6\x6b\x38\xa6\x53\xef\x02\x1d\xe8\xd8\x1f\xc0\xed\x9c\xf1\xda\xb3\x6c\x57\x82\x9a\xbf\xbe\x1f\x7c\x8d\xbe\xa8\x69\x2f\xe8\x4f\x7e\x47\x05\x1c\x7b\xe0\xa6\x52\x17\x55\xbd\x67\x55\xb7\x7e\x8e\xcd\x7d\x18\xbe\x9d\xf1\x30\xa7\x55\x64\x5d\xda\x6e\xd9\xcc\x61\x5c\xb2\xc6\x42\xa2\x75\x29\x00\x23\x5e\x10\xac\x16\xd0\x88\xc2\xec\xd3\xcd\xdd\xf5\xec\x15\xac\x31\x12\x15\x37\xdb\x65\xbd\xd0\x84\x20\x34\xc3\x70\xb7\x9a\xc0\x5f\xfe\x3a\x81\xbf\x23\x0a\x7f\xfd\x9f\xff\xff\x17\x87\xda\xdf\x4b\xfa\xd0\xa2\x17\x48\xb6\xa2\x6f\x2f\xaf\x5e\x5f\x7c\xcf\x92\x1f\x43\x78\xc4\x0a\xb5\xb5\x94\xb8\x8b\x96\x2c\x2c\xae\xda\xd5\xb7\x31\x98\x28\x72\x81\x44\xc4\x92\xc2\xcf\x63\x2f\x8b\x64\x25\x94\xf5\xb4\x60\xc2\x62\xb3\xdb\x8b\xd7\xd7\x57\x6f\x6e\x67\x50\x57\x8e\xab\x4c\x31\xac\x0e\xa1\x88\xcb\x96\xb5\x3f\x19\x89\x43\x10\x40\x4b\xd7\x95\x31\x43\x90\x86\xa8\xf4\xe1\xf2\xea\xd3\xdd\xc5\xed\x0c\xd6\x84\x56\x12\x8f\x50\xc9\x8a\x34\x44\xa5\xb7\xd7\x9f\x3e\xde\xce\x60\xc5\x2a\x3e\x42\x9d\x03\x94\x21\xaa\xbc\x99\xfe\x7e\x3b\x83\x1c\x6d\x47\x28\xb2\x87\x11\x38\x80\xa3\xd8\x4f\x9a\xd3\x1e\x27\xed\x71\x18\x04\xf7\x78\xfb\xc2\x1c\x1b\x2f\x11\x71\x1d\x04\x4d\xc7\x71\x1e\xe0\xd8\x1d\x24\x6a\x93\x06\x75\x04\x28\xe5\x24\x4d\x3c\x86\xfb\x28\xcd\xee\xb9\xcc\xe1\x7a\x24\x80\xd8\x9b\xa7\xdd\xf1\xd5\x9b\x14\x88\xe6\xfa\x05\xd3\xdd\x9e\xaf\xc2\xaa\xb7\x4f\x73\xa7\xd3\x96\x06\x12\xa3\x08\x11\xa9\x52\x7b\x1c\xa9\x22\x60\xba\xa7\x31\x11\xc0\xb4\x0b\x81\x8a\x01\xf2\xfd\x70\x3e\xe5\xea\x69\xe6\xf2\x4d\x42\x0d\x38\x78\xec\x62\xda\xc7\x40\xdb\xa6\xaa\xdf\x13\x6e\x5e\xe3\x8e\x68\xee\x24\x8c\x18\x35\x62\xca\xea\xe1\x70\x88\xd0\xf7\x23\xc6\xe3\x3b\xc8\x3d\xe0\x93\xf6\xcc\xa6\xce\x40\xee\x76\x81\xa8\x6a\x4c\xc1\x70\xa8\xd1\x30\xc7\x17\xd3\xcd\x91\x2a\x02\x54\x9b\x6c\x0b\x86\xf2\xa8\xee\x92\x0e\xe4\xea\x28\x0d\x45\x27\xd2\x4b\x8c\xff\xa4\x57\x33\x26\xed\xa8\x19\x0e\x3d\x9d\x27\x11\xc7\xaa\x4e\x73\x13\x4a\x43\x76\x2a\x9e\x9f\xab\x31\xb7\x29\x5c\xf0\x09\x08\x0f\x63\xac\x40\x3d\xc8\x23\xbe\x14\x8f\x8f\x83\x65\x7b\x30\x1c\x2b\x6c\x94\xb9\x33\x8a\x9a\xaf\xf6\x58\xb1\x84\x02\x23\x67\x3a\x79\xfb\xd9\xca\x4c\x19\xac\x19\xd7\xcf\x4d\xb9\x5c\xea\x1e\x89\x7d\x7b\x84\xed\xcd\x96\xa1\x6e\xe3\x61\x70\x39\x5f\xee\x87\x05\x7c\xef\x09\xec\x36\xae\x42\x67\xb3\x1d\x00\x75\x0e\x85\x33\x21\xd7\x7c\x75\x4e\x41\xcd\xb1\xdc\xc6\xab\x6a\xd3\x76\xfa\x5e\x97\x67\x42\x8a\x45\x70\xfa\x45\xed\x7b\x6e\x75\xea\x5c\xbc\x33\x14\xe2\x74\x95\xba\xe5\xdb\xd7\xd9\x33\x76\x78\x78\xbc\xdd\x76\x41\x70\xa1\x73\x22\x25\xee\x56\x87\x4b\x52\x90\x6d\xc0\x46\xc6\x04\x72\x22\xca\x02\x6d\xcd\x15\x67\x0a\x58\x9f\xda\xc2\xc5\xf0\x5d\x8e\x10\x66\x72\xae\xfa\x71\x94\x4c\x41\x0c\xaa\xd8\x38\x20\x47\xd4\x31\x19\x32\xa8\x64\xff\xf6\xf7\xf1\x1a\xa6\xe1\x05\xd5\x3b\xb8\xd8\x66\xbc\x86\xc9\x90\xbe\x61\xa0\x44\x72\x35\x01\x44\x9b\x47\xf2\xe6\xe6\xee\x06\x44\xd3\xdd\xbb\xe1\x80\x21\x05\x1b\x84\x06\x32\x55\x9f\x00\xbf\x45\xbc\x3d\xa5\xb9\x76\x22\x76\xe5\x08\x8e\xd2\xc9\x30\xc3\x75\x71\xd5\x43\x2c\x77\xdc\xe1\xc1\xe9\xcd\x65\xfa\x69\xc1\x3e\x53\xd4\xf1\x40\xd5\x54\xdf\xbe\x9d\x9b\xfb\x5d\xc1\x3c\x21\x3d\x7f\x7c\x6c\x63\x32\xfd\x23\x27\xca\xdc\xab\xa2\xbe\x0d\x36\xfa\x24\xe1\x38\x19\x63\x8a\x71\x64\x8d\x23\x95\x3b\x38\x51\x5a\x92\x63\x9c\x4b\x0d\xa0\x84\x0f\xde\x4e\x6f\x2e\x63\x4e\xdd\x2a\xb2\xd8\x93\x9e\x6e\x48\x07\x71\xdc\x79\xcc\x34\xeb\xb7\x32\x45\x9d\xc4\x7c\x4a\xeb\x3f\x8e\x0c\x67\x8a\x87\xbb\xe6\x9b\xaf\x11\x59\x01\x4a\xb7\xe1\x87\x85\xdc\xdc\xde\x83\x7d\xd4\xa3\x7b\x9f\x26\xee\x60\x5f\x9a\xb1\x58\x99\xa2\x8e\xee\xd5\x0d\x39\x47\x02\x47\x9a\x80\x8f\x33\x4a\xe4\xce\x6e\xf4\x26\xe9\x30\xe9\x01\x90\x44\x45\x3a\x06\x7c\x0c\x95\x02\x70\xee\x8c\xc6\xe9\xcd\xa5\x37\x95\x51\x7f\x8f\x4f\x2b\x54\x4d\x54\xc4\x9c\x4a\x8b\xe5\x76\x1e\x02\x33\xc5\x3d\xf0\x11\x1a\x9f\xe9\x1c\xea\x37\x0c\x76\xb7\xda\xbe\x6c\x6a\x49\x78\xfd\x9f\x91\xc0\x76\xe7\xf0\xe6\xb2\xbb\x2d\xaf\x5f\xa6\x9d\xc1\x69\xf3\x42\x77\xfb\x50\xad\x2b\xbd\x3a\x9e\xdf\xbb\x6c\x9f\xfd\x32\xbd\xbd\xf8\xe3\x66\x7a\xf7\x76\xa6\x6a\x7e\x97\xac\x3f\xbd\xb9\xd4\x3f\x9b\xb0\x5f\xa1\x4f\x2f\x05\x16\xf2\x69\x58\xde\xde\xa1\x6c\x2c\x68\xf3\x35\x91\x0b\xa8\xe2\x85\xe9\x06\xac\xc4\xe6\xbd\x58\xf3\x5f\x33\x35\xf8\xfb\x54\x04\xaf\xcf\xe5\x57\x3d\xcd\xf8\xed\xbd\xa0\x29\x74\x23\x98\x8a\xae\xa9\x8c\x9d\x8f\xdf\xca\x83\x35\xda\x02\x2a\x04\x4b\x88\x6e\x3c\x9d\x58\x67\x9f\x6b\x9e\x2f\xa8\x63\x2a\x4b\x52\x67\x98\x9c\xbc\x70\x06\x48\x82\x6c\x51\xae\x9f\xd8\x20\x73\x1b\x64\xcc\x8d\xfe\x91\xcc\xf6\xc4\xb2\xde\xc5\x44\x5d\xce\x11\xf7\x1b\x45\xc0\x38\x62\xfb\xfd\x07\x90\xcd\x03\xc0\xc8\x8c\x4b\xed\xb3\x3f\xee\x80\x7e\x1c\xb7\xa7\x1e\x54\xfd\x1d\xa1\x1e\x12\x60\xac\xca\xdc\x76\xf9\x3a\xb7\x10\x9e\xd6\x8f\x26\xe9\xae\x70\xa3\x17\xf2\x84\x2e\xd8\x44\x5b\xba\x79\x2e\x69\x27\x12\x17\xb9\x70\x0d\xaf\x47\x14\x10\x2e\x40\x83\x65\xba\x83\xd9\xc2\xaf\xf3\xb4\x8a\xc6\x60\x0a\x24\x56\x70\xfa\x22\x4a\xdf\x24\x3c\xe7\xec\xd4\x3f\xfa\xad\xbd\xea\xc6\x83\xe8\x7b\x13\x9e\x19\x2a\x1e\x23\x45\x0d\xf5\xb3\x0e\xc2\xa8\x11\xb9\x24\xc6\x66\xd2\xb4\xb0\x43\xf8\xc6\x74\x4d\x9d\x21\x6a\x76\x9a\xba\xaf\x6c\x01\xa3\x99\x6b\x6e\x8c\x64\xb6\xdb\x48\x7d\xe2\x19\xf5\xbb\x89\x32\xb1\xe6\xcb\xfe\xb8\x6f\x5a\x39\x21\x8e\xe5\x1a\x2a\xbe\x8f\xec\xf8\xfd\xb9\x1f\x59\x17\x3f\x50\x21\xfb\xe5\x18\x3a\x85\x04\x2a\x81\xfb\x6f\x37\x34\xd7\x4f\x9a\x43\xa2\xae\xd2\xc4\x72\x3b\x93\x86\x9d\x89\x71\x53\xcf\x79\xb3\xdf\x30\x9f\x3b\xd8\xf4\x27\x67\xf7\xbf\x42\xce\x4b\x1b\xda\xcf\x76\x87\xe1\xe3\x7b\x97\x37\xf0\xf1\xbd\x9d\xe5\x97\xa6\xa9\x1c\x8c\xbb\xef\xf6\x5c\x71\x37\xe7\x8d\x93\xa9\x0e\x7c\x9b\x9c\xd8\x4e\x22\x2c\xb0\x05\x60\x94\xad\x7c\x4b\xfa\x18\x56\x7b\x0e\x33\xcf\x31\x6f\xd7\x56\x30\xdf\xf6\x42\xdb\x26\x53\x7a\xc1\x8a\x82\x6d\x70\xae\xbe\x2a\x1b\x3e\x53\x05\x7f\xc1\x71\x61\xfe\x78\x70\x37\xe8\x91\xd0\x1d\x26\xf8\x11\xff\x59\x61\x9d\x73\x99\xe1\x52\x5f\xd5\x3c\xaf\xa4\x72\x55\x33\x6c\x66\x66\x93\x7b\xae\x1f\xe9\xc3\x39\x6c\xb1\x33\x9f\x60\x08\x92\x77\xd5\x12\xbc\xf5\xca\x48\x30\x19\xe6\x46\xf6\xaa\xf6\xbe\xb6\x58\x5f\x54\x43\xc4\x4a\xe9\x71\xf4\xeb\xb6\x86\x0b\x8e\xba\x3e\x01\xc1\x06\xcf\xeb\x56\x9e\x00\x02\x8e\x36\xf0\xf6\xee\xee\xa6\xf7\x33\xe3\x86\x54\x48\x44\x73\xc4\x9b\xe0\xbd\x39\xda\xfe\x5f\x90\xbc\xc2\xf0\x73\x8f\x43\xc1\xfc\x6c\x07\xa3\x0c\xfe\x0b\x0b\x54\x08\xc5\xb3\x87\x18\x79\x3f\xc3\xff\x31\xa5\xa3\xe6\xc2\xfd\xc1\xfa\xec\x4c\xe1\x2f\x0a\xb4\x6c\x1e\x68\x24\xb4\xac\xf4\xd9\x0b\x51\x9f\xb5\xd4\x4f\x08\x4c\xe0\x44\xa9\xaa\xfe\xe5\x68\xa3\xfe\xd1\x6a\x9c\x4c\x9a\x17\x7d\x62\xe7\xbe\x27\x54\xc0\x33\xe1\xd8\x2f\x2b\xda\x55\xed\x39\x5c\x0a\xa1\xa6\xb2\x8d\xb8\x6f\x06\x9b\x3a\x76\xbd\x3b\x11\x63\x54\xd5\x5a\xe8\x9d\x1d\x46\x1f\x30\x97\xdd\x9b\x09\x24\xeb\xa3\x7a\xe7\xb9\x1f\xa5\x93\xd7\x4e\x7a\xeb\xbb\x73\xb8\x5b\x61\xf8\x72\xc6\x4a\x4c\x37\xfa\x8d\x44\x65\x73\x5f\x51\xf7\x71\xd9\x40\xb3\xa7\xe3\x39\xd4\x93\x98\x53\x54\x00\x56\xab\xbf\x73\xf8\x50\x2f\xa2\x8c\x03\xd2\xa0\x18\x67\xa8\xbf\x44\x6d\x9e\xdd\x73\xea\x39\x1a\x38\x49\x61\x54\x92\x9c\x65\x3e\xe0\x44\x45\x23\x00\xad\x0a\x36\xfc\x6d\xe0\xe6\xb2\xc9\x38\xb1\x96\x76\x61\x2e\x78\xe6\x6d\x06\x08\x2b\x9d\x2b\xa6\xa3\x40\x7b\x95\xb6\x99\xd0\xb1\xb4\x1e\x87\x1d\xab\xf6\x6e\x96\x3d\x76\xad\x1f\x49\x48\x74\x41\xea\x61\xe6\x09\x4b\x31\x54\x42\x74\x11\x2a\x5e\x3c\xa5\xfe\x83\xe0\x03\xf7\x50\x78\xf6\x58\xf6\x88\x9e\x7e\xf3\xb9\xd9\x70\xf4\x9f\xad\xda\xa7\x7a\xca\x8d\xc8\x91\xdb\x50\xb7\xf5\x99\xfb\xdd\xac\xb9\x7b\xbd\xf5\xee\xf7\x9b\x8b\x73\xb8\x61\x42\xe8\x7b\xd6\x3a\x0f\x1c\xae\xe4\xba\x98\xc0\x4a\xca\x72\x02\xff\x11\xca\x5d\x93\xf8\x8b\x9c\x80\x78\x70\x3d\x50\x7e\x7c\x39\x76\x17\xa8\x92\x2b\xc6\xc9\x57\x63\x60\xf7\x78\x7b\xf8\xd8\x14\x9c\x9e\x9d\xa1\xaa\x1f\xf7\x77\x6e\x1c\x0d\x85\xf3\xc6\xa8\x9a\xbd\x3a\x56\x49\xe5\xfe\xcd\x54\xf9\x67\x13\xc0\x44\xae\x30\xd7\xe5\x54\x8e\xde\x16\xad\x8b\x40\xc0\x29\x01\x28\x6a\x9f\xe0\xf7\xe9\x87\xf7\x96\xb0\x77\xf2\x96\x41\x18\x27\x94\x7e\x54\xfb\x76\xaa\x70\xfa\x0d\x61\x85\x98\x92\x89\x14\xe0\xf7\xe7\xb0\xea\x07\x97\xf4\xc5\xf4\x9a\x45\xfd\x11\xcc\x35\x77\x30\xb9\x82\xa4\x98\x4a\x22\xb7\x7a\x91\x3f\xe9\x3a\xc7\x13\xbd\xc5\xd0\x26\x15\x13\x2a\x24\x46\xb9\x3e\xab\xbc\x4b\xe3\x6f\x56\x0f\xed\x0f\xa6\xb3\xd4\xb7\xb8\x99\x68\x41\x7d\xa2\x6d\x8d\xe4\x4b\x78\xd1\x6e\x70\x7a\xf6\xc4\x7e\x98\x46\xce\x71\xb6\x59\x07\x70\x57\x37\xd8\x23\x0a\x6d\xb3\x9b\x4e\x32\x47\x62\xd5\x66\x30\xd5\x01\x8b\x7a\x32\x8a\xdc\x70\x8f\xc4\xb1\x27\xc0\x73\x42\xa5\x70\x32\x9b\xb0\x94\xbe\xc1\x53\xe6\xac\x72\xbe\x60\x96\x88\x62\x4f\xe2\x67\x5c\xaa\xd5\x7a\x7d\xa5\x72\xb9\x42\x73\x2c\x49\x86\x8a\x62\x0b\xf3\x6d\xd7\x1e\x5e\xd5\x37\x91\xb5\xb7\xfb\xe9\x29\xb7\xbd\xa6\x68\x4d\xe4\x0b\x71\x4f\xca\xfa\x9c\x3d\xce\x1b\x5e\x7d\xab\x99\xeb\x94\xc0\x77\x92\x3e\xa4\xe8\x26\x26\xc7\x16\xf0\xaf\x76\x93\x1e\xfe\xab\x37\xe6\x95\xd9\xfe\x7b\xd2\xee\xd1\x4f\x94\x0e\x7a\x6e\xfe\xe3\xb7\x8b\x8f\xbf\xfc\x80\x7a\xfa\x31\xaa\xaa\x4a\xfd\xf7\x4f\xff\x1b\x00\x00\xff\xff\x3a\x4f\xf9\x5c\x92\xc6\x00\x00")

func wski18nResourcesEn_usAllJsonBytes() ([]byte, error) {
    return bindataRead(
        _wski18nResourcesEn_usAllJson,
        "wski18n/resources/en_US.all.json",
    )
}

func wski18nResourcesEn_usAllJson() (*asset, error) {
    bytes, err := wski18nResourcesEn_usAllJsonBytes()
    if err != nil {
        return nil, err
    }

    info := bindataFileInfo{name: "wski18n/resources/en_US.all.json", size: 50834, mode: os.FileMode(420), modTime: time.Unix(1502981211, 0)}
    a := &asset{bytes: bytes, info: info}
    return a, nil
}

var _wski18nResourcesEs_esAllJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func wski18nResourcesEs_esAllJsonBytes() ([]byte, error) {
    return bindataRead(
        _wski18nResourcesEs_esAllJson,
        "wski18n/resources/es_ES.all.json",
    )
}

func wski18nResourcesEs_esAllJson() (*asset, error) {
    bytes, err := wski18nResourcesEs_esAllJsonBytes()
    if err != nil {
        return nil, err
    }

    info := bindataFileInfo{name: "wski18n/resources/es_ES.all.json", size: 0, mode: os.FileMode(420), modTime: time.Unix(1502980774, 0)}
    a := &asset{bytes: bytes, info: info}
    return a, nil
}

var _wski18nResourcesFr_frAllJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8a\xe6\x52\x50\xa8\xe6\x52\x50\x50\x50\x50\xca\x4c\x51\xb2\x52\x50\x4a\xaa\x2c\x48\x2c\x2e\x56\x48\x4e\x2d\x2a\xc9\x4c\xcb\x4c\x4e\x2c\x49\x55\x48\xce\x48\x4d\xce\xce\xcc\x4b\x57\xd2\x81\x28\x2c\x29\x4a\xcc\x2b\xce\x49\x2c\xc9\xcc\xcf\x03\xe9\x08\xce\xcf\x4d\x55\x40\x12\x53\xc8\xcc\x53\x70\x2b\x4a\xcd\x4b\xce\x50\xe2\x52\x50\xa8\xe5\x8a\xe5\x02\x04\x00\x00\xff\xff\x45\xa4\xe9\x62\x65\x00\x00\x00")

func wski18nResourcesFr_frAllJsonBytes() ([]byte, error) {
    return bindataRead(
        _wski18nResourcesFr_frAllJson,
        "wski18n/resources/fr_FR.all.json",
    )
}

func wski18nResourcesFr_frAllJson() (*asset, error) {
    bytes, err := wski18nResourcesFr_frAllJsonBytes()
    if err != nil {
        return nil, err
    }

    info := bindataFileInfo{name: "wski18n/resources/fr_FR.all.json", size: 101, mode: os.FileMode(420), modTime: time.Unix(1502980774, 0)}
    a := &asset{bytes: bytes, info: info}
    return a, nil
}

var _wski18nResourcesIt_itAllJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func wski18nResourcesIt_itAllJsonBytes() ([]byte, error) {
    return bindataRead(
        _wski18nResourcesIt_itAllJson,
        "wski18n/resources/it_IT.all.json",
    )
}

func wski18nResourcesIt_itAllJson() (*asset, error) {
    bytes, err := wski18nResourcesIt_itAllJsonBytes()
    if err != nil {
        return nil, err
    }

    info := bindataFileInfo{name: "wski18n/resources/it_IT.all.json", size: 0, mode: os.FileMode(420), modTime: time.Unix(1502980774, 0)}
    a := &asset{bytes: bytes, info: info}
    return a, nil
}

var _wski18nResourcesJa_jaAllJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func wski18nResourcesJa_jaAllJsonBytes() ([]byte, error) {
    return bindataRead(
        _wski18nResourcesJa_jaAllJson,
        "wski18n/resources/ja_JA.all.json",
    )
}

func wski18nResourcesJa_jaAllJson() (*asset, error) {
    bytes, err := wski18nResourcesJa_jaAllJsonBytes()
    if err != nil {
        return nil, err
    }

    info := bindataFileInfo{name: "wski18n/resources/ja_JA.all.json", size: 0, mode: os.FileMode(420), modTime: time.Unix(1502980774, 0)}
    a := &asset{bytes: bytes, info: info}
    return a, nil
}

var _wski18nResourcesKo_krAllJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func wski18nResourcesKo_krAllJsonBytes() ([]byte, error) {
    return bindataRead(
        _wski18nResourcesKo_krAllJson,
        "wski18n/resources/ko_KR.all.json",
    )
}

func wski18nResourcesKo_krAllJson() (*asset, error) {
    bytes, err := wski18nResourcesKo_krAllJsonBytes()
    if err != nil {
        return nil, err
    }

    info := bindataFileInfo{name: "wski18n/resources/ko_KR.all.json", size: 0, mode: os.FileMode(420), modTime: time.Unix(1502980774, 0)}
    a := &asset{bytes: bytes, info: info}
    return a, nil
}

var _wski18nResourcesPt_brAllJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func wski18nResourcesPt_brAllJsonBytes() ([]byte, error) {
    return bindataRead(
        _wski18nResourcesPt_brAllJson,
        "wski18n/resources/pt_BR.all.json",
    )
}

func wski18nResourcesPt_brAllJson() (*asset, error) {
    bytes, err := wski18nResourcesPt_brAllJsonBytes()
    if err != nil {
        return nil, err
    }

    info := bindataFileInfo{name: "wski18n/resources/pt_BR.all.json", size: 0, mode: os.FileMode(420), modTime: time.Unix(1502980774, 0)}
    a := &asset{bytes: bytes, info: info}
    return a, nil
}

var _wski18nResourcesZh_hansAllJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func wski18nResourcesZh_hansAllJsonBytes() ([]byte, error) {
    return bindataRead(
        _wski18nResourcesZh_hansAllJson,
        "wski18n/resources/zh_Hans.all.json",
    )
}

func wski18nResourcesZh_hansAllJson() (*asset, error) {
    bytes, err := wski18nResourcesZh_hansAllJsonBytes()
    if err != nil {
        return nil, err
    }

    info := bindataFileInfo{name: "wski18n/resources/zh_Hans.all.json", size: 0, mode: os.FileMode(420), modTime: time.Unix(1502980774, 0)}
    a := &asset{bytes: bytes, info: info}
    return a, nil
}

var _wski18nResourcesZh_hantAllJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func wski18nResourcesZh_hantAllJsonBytes() ([]byte, error) {
    return bindataRead(
        _wski18nResourcesZh_hantAllJson,
        "wski18n/resources/zh_Hant.all.json",
    )
}

func wski18nResourcesZh_hantAllJson() (*asset, error) {
    bytes, err := wski18nResourcesZh_hantAllJsonBytes()
    if err != nil {
        return nil, err
    }

    info := bindataFileInfo{name: "wski18n/resources/zh_Hant.all.json", size: 0, mode: os.FileMode(420), modTime: time.Unix(1502980774, 0)}
    a := &asset{bytes: bytes, info: info}
    return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
    cannonicalName := strings.Replace(name, "\\", "/", -1)
    if f, ok := _bindata[cannonicalName]; ok {
        a, err := f()
        if err != nil {
            return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
        }
        return a.bytes, nil
    }
    return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
    a, err := Asset(name)
    if err != nil {
        panic("asset: Asset(" + name + "): " + err.Error())
    }

    return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
    cannonicalName := strings.Replace(name, "\\", "/", -1)
    if f, ok := _bindata[cannonicalName]; ok {
        a, err := f()
        if err != nil {
            return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
        }
        return a.info, nil
    }
    return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
    names := make([]string, 0, len(_bindata))
    for name := range _bindata {
        names = append(names, name)
    }
    return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
    "wski18n/resources/de_DE.all.json": wski18nResourcesDe_deAllJson,
    "wski18n/resources/en_US.all.json": wski18nResourcesEn_usAllJson,
    "wski18n/resources/es_ES.all.json": wski18nResourcesEs_esAllJson,
    "wski18n/resources/fr_FR.all.json": wski18nResourcesFr_frAllJson,
    "wski18n/resources/it_IT.all.json": wski18nResourcesIt_itAllJson,
    "wski18n/resources/ja_JA.all.json": wski18nResourcesJa_jaAllJson,
    "wski18n/resources/ko_KR.all.json": wski18nResourcesKo_krAllJson,
    "wski18n/resources/pt_BR.all.json": wski18nResourcesPt_brAllJson,
    "wski18n/resources/zh_Hans.all.json": wski18nResourcesZh_hansAllJson,
    "wski18n/resources/zh_Hant.all.json": wski18nResourcesZh_hantAllJson,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
    node := _bintree
    if len(name) != 0 {
        cannonicalName := strings.Replace(name, "\\", "/", -1)
        pathList := strings.Split(cannonicalName, "/")
        for _, p := range pathList {
            node = node.Children[p]
            if node == nil {
                return nil, fmt.Errorf("Asset %s not found", name)
            }
        }
    }
    if node.Func != nil {
        return nil, fmt.Errorf("Asset %s not found", name)
    }
    rv := make([]string, 0, len(node.Children))
    for childName := range node.Children {
        rv = append(rv, childName)
    }
    return rv, nil
}

type bintree struct {
    Func     func() (*asset, error)
    Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
    "wski18n": &bintree{nil, map[string]*bintree{
        "resources": &bintree{nil, map[string]*bintree{
            "de_DE.all.json": &bintree{wski18nResourcesDe_deAllJson, map[string]*bintree{}},
            "en_US.all.json": &bintree{wski18nResourcesEn_usAllJson, map[string]*bintree{}},
            "es_ES.all.json": &bintree{wski18nResourcesEs_esAllJson, map[string]*bintree{}},
            "fr_FR.all.json": &bintree{wski18nResourcesFr_frAllJson, map[string]*bintree{}},
            "it_IT.all.json": &bintree{wski18nResourcesIt_itAllJson, map[string]*bintree{}},
            "ja_JA.all.json": &bintree{wski18nResourcesJa_jaAllJson, map[string]*bintree{}},
            "ko_KR.all.json": &bintree{wski18nResourcesKo_krAllJson, map[string]*bintree{}},
            "pt_BR.all.json": &bintree{wski18nResourcesPt_brAllJson, map[string]*bintree{}},
            "zh_Hans.all.json": &bintree{wski18nResourcesZh_hansAllJson, map[string]*bintree{}},
            "zh_Hant.all.json": &bintree{wski18nResourcesZh_hantAllJson, map[string]*bintree{}},
        }},
    }},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
    data, err := Asset(name)
    if err != nil {
        return err
    }
    info, err := AssetInfo(name)
    if err != nil {
        return err
    }
    err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
    if err != nil {
        return err
    }
    err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
    if err != nil {
        return err
    }
    err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
    if err != nil {
        return err
    }
    return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
    children, err := AssetDir(name)
    // File
    if err != nil {
        return RestoreAsset(dir, name)
    }
    // Dir
    for _, child := range children {
        err = RestoreAssets(dir, filepath.Join(name, child))
        if err != nil {
            return err
        }
    }
    return nil
}

func _filePath(dir, name string) string {
    cannonicalName := strings.Replace(name, "\\", "/", -1)
    return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

