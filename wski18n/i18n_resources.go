/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Code generated by go-bindata.
// sources:
// wski18n/resources/de_DE.all.json
// wski18n/resources/en_US.all.json
// wski18n/resources/es_ES.all.json
// wski18n/resources/fr_FR.all.json
// wski18n/resources/it_IT.all.json
// wski18n/resources/ja_JA.all.json
// wski18n/resources/ko_KR.all.json
// wski18n/resources/pt_BR.all.json
// wski18n/resources/zh_Hans.all.json
// wski18n/resources/zh_Hant.all.json
// DO NOT EDIT!

package wski18n

import (
    "bytes"
    "compress/gzip"
    "fmt"
    "io"
    "io/ioutil"
    "os"
    "path/filepath"
    "strings"
    "time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
    gz, err := gzip.NewReader(bytes.NewBuffer(data))
    if err != nil {
        return nil, fmt.Errorf("Read %q: %v", name, err)
    }

    var buf bytes.Buffer
    _, err = io.Copy(&buf, gz)
    clErr := gz.Close()

    if err != nil {
        return nil, fmt.Errorf("Read %q: %v", name, err)
    }
    if clErr != nil {
        return nil, err
    }

    return buf.Bytes(), nil
}

type asset struct {
    bytes []byte
    info  os.FileInfo
}

type bindataFileInfo struct {
    name    string
    size    int64
    mode    os.FileMode
    modTime time.Time
}

func (fi bindataFileInfo) Name() string {
    return fi.name
}
func (fi bindataFileInfo) Size() int64 {
    return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
    return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
    return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
    return false
}
func (fi bindataFileInfo) Sys() interface{} {
    return nil
}

var _wski18nResourcesDe_deAllJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func wski18nResourcesDe_deAllJsonBytes() ([]byte, error) {
    return bindataRead(
        _wski18nResourcesDe_deAllJson,
        "wski18n/resources/de_DE.all.json",
    )
}

func wski18nResourcesDe_deAllJson() (*asset, error) {
    bytes, err := wski18nResourcesDe_deAllJsonBytes()
    if err != nil {
        return nil, err
    }

    info := bindataFileInfo{name: "wski18n/resources/de_DE.all.json", size: 0, mode: os.FileMode(420), modTime: time.Unix(1506363546, 0)}
    a := &asset{bytes: bytes, info: info}
    return a, nil
}

var _wski18nResourcesEn_usAllJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x7d\x4f\x73\xdb\x38\xd2\xf7\x7d\x3e\x45\x57\x2e\x76\xde\x92\x9d\xdd\xd3\x5b\x4f\x52\x73\xd0\x24\x9e\x8d\x37\x89\xed\x8a\x9d\xd9\x9d\xda\x6c\x8d\x20\x12\x92\xb0\xa6\x00\x0e\x00\x5a\x51\xb2\xfe\xee\x4f\x01\x20\x29\x52\xc2\x5f\x52\x4e\x9e\x53\x1c\xb1\xfb\xd7\x0d\xa0\x01\x34\x1a\x0d\xe0\x5f\x3f\x01\x7c\xfb\x09\x00\xe0\x19\xc9\x9f\xbd\x84\x67\xd3\xb2\x2c\x48\x86\x24\x61\x14\xf0\x17\x22\x71\x0e\x15\xc5\x5f\x4a\x9c\x49\x9c\x17\xdb\x67\x13\x43\x2c\x39\xa2\xa2\xd0\x64\x31\x5c\x3f\x01\x3c\x4e\xf6\x45\x7d\xac\x28\x9c\x7c\xfb\x76\x7e\x85\xd6\xf8\xf1\x11\xce\xce\x56\xb8\x28\x4f\x60\xc1\x38\x54\x02\x2d\xf1\xf9\x67\xea\x10\x17\xc3\x69\x15\x89\x39\x67\xfc\x25\x38\x60\x9b\xaf\x56\x56\xca\x24\x08\x2c\x1d\xac\xcd\x57\x2b\xeb\x75\x89\xe9\x3f\x56\x44\xdc\x43\x56\xb0\x2a\x87\x8c\xad\xcb\x4a\x12\xba\x54\x7f\xad\x11\xcd\xa1\x20\x14\x03\xa1\x12\xf3\x05\xca\xf0\xb9\x43\x48\x3a\x8e\x55\x9d\x07\xcc\xe7\x4c\x60\x60\x95\x2c\x2b\x57\x81\xf6\x88\xac\x40\x39\x9e\x57\x4b\x28\xf0\x03\x2e\xfc\x60\x16\x42\x2b\x20\xaa\xe4\x8a\x71\xf2\xd5\x18\xd2\xec\xdd\xc5\xef\x33\x07\xa2\x8d\xd2\x0a\xb9\xd1\xf5\x35\xbd\xb9\x84\xd9\xdb\xeb\xdb\x3b\x17\xde\x01\x59\x08\xec\xb7\x8b\x8f\xb7\x97\xd7\x57\x11\x78\x2d\xa5\x15\x72\xbe\x2d\x91\x10\x90\x61\x2e\xc9\x42\x75\x21\x0c\xd9\x0a\x67\xf7\x84\x2e\x1d\xd0\x3e\x0e\xab\x88\x4f\x14\xcd\x0b\x0c\x92\x01\xa1\x44\x12\x54\x90\xaf\x18\x04\xe6\x0f\x98\x43\xc6\x28\xc5\x99\x82\x7e\x09\xdf\xbe\x9d\x63\xce\x1f\x1f\x1d\x72\x93\x61\xac\xca\xdc\x20\x8e\xd6\x58\x62\x0e\x88\x2f\xab\x35\xa6\x52\xc0\xba\x12\x12\xe6\x18\x10\xdc\xe3\x2d\x3c\xa0\xa2\xc2\x50\x22\xc2\x35\x16\xe2\x4b\xe1\xd4\x69\x28\x9a\x55\xb5\x29\xa5\x4c\x1a\x83\x3a\x86\x6e\x83\xe1\xac\xca\xfd\x8a\x48\x81\x73\x55\xfb\x25\xe2\x02\xef\x20\x83\xed\x16\xc3\x69\xb7\x76\xc6\xef\x61\x43\xe4\x0a\x28\x5a\x63\x51\xa2\x0c\x0b\x97\xb9\xdb\x48\xad\xa0\x05\x11\x12\x30\x95\x44\x12\x2c\x80\x50\x90\x2b\x0c\x59\xc5\x39\xa6\x72\xc7\xec\x10\x13\xc9\x1c\xe8\x05\x6c\x2e\x51\xcd\xab\x01\xd9\x02\xd0\x03\x22\x85\xfe\xbe\xd3\x3f\xa1\x43\xa4\x23\x5a\x55\x5c\x62\x09\x92\x93\xe5\x12\x73\x31\x01\xa4\xfb\x93\xfa\x83\xe6\xc0\xab\x62\x57\x62\x8e\x97\x44\x48\xbe\xd5\x13\x1e\x0a\xd6\xda\x68\x58\xab\xb2\x6a\xfe\xa5\x7a\xfe\x3d\x01\x22\x40\x4d\x80\x48\x19\x34\xc9\xe1\xcf\x0a\x15\x64\x41\x70\xae\x31\x82\xf5\x38\x04\x29\xbd\x89\x5b\xb3\x51\xa5\x6b\xcb\x06\x8d\x70\xfd\xbf\xc7\xc7\x93\x71\xad\x9e\x2e\xc4\x5a\x90\x8b\x8e\x89\xb7\x7c\x9a\xa9\x83\xe2\xf4\x8e\x62\xb9\xdd\xfd\xd3\x66\xbc\xbe\x2e\x69\xa5\x0f\x8c\x29\x25\xca\xee\xd1\x32\x62\x44\x69\x09\xed\xf3\x27\xa1\xb9\x1a\xd8\xcc\x34\x20\x54\xbb\xa0\x86\xc5\x35\x81\xfa\x58\xac\x42\x2e\xa9\x31\xc7\xf2\x60\xba\xd1\x4d\xab\x7f\x8e\xb1\x9d\x74\x1c\xaf\x3a\xe8\x70\x86\xd1\x38\xbb\xdf\x53\x94\x4a\x45\xb3\xaa\xf6\x0b\xa1\xb9\x76\x48\x39\x36\x50\x0b\x3d\xfb\x04\x95\x08\xf3\x59\xc5\x7d\xfb\x76\xce\xee\x1f\x1f\x0d\x1b\xce\x61\x5e\xc3\xb4\x23\x8a\xb3\x93\xc4\x70\x5a\x45\x1a\x06\x35\x3e\xe2\x4d\xc0\xd0\xac\xa4\x81\x91\xab\xe6\xa9\xa9\xa1\x33\x36\x26\x8c\x4c\x51\x20\x51\x15\xda\x40\xa4\x57\xa8\x8d\xd3\x2a\xb2\x2a\x73\x5d\x4b\x7a\xe5\x28\xf4\x72\xa6\xe6\x9d\x00\xe3\xd0\x56\x62\x03\x48\x16\x40\x24\xe4\x0c\x9b\xa9\x42\x33\x39\x74\x3a\x0a\xb4\xc3\x8d\x35\x1c\xb5\x84\x48\x2b\x0f\x71\x79\x9b\xc4\x30\x0d\x69\x12\x1f\xa7\xd3\x11\xf1\x9b\x76\x97\x22\x60\xd1\x1d\xd2\x81\xe6\x1c\x46\xf0\x56\xdc\x92\xc9\x01\x95\xe6\xe2\x72\xac\x84\x0b\xbc\xeb\x70\xce\x55\x70\x8f\x28\x50\x6d\x7d\xea\x81\x35\x17\x05\xe2\xad\x3c\x83\x30\xc4\xea\x7c\x9c\x1e\xd7\xa3\x28\x42\xae\xc1\x21\x9d\x15\xee\x8a\xd5\x4e\xe4\xce\x0f\xcb\xb1\xd4\x11\xa9\x73\xd0\x11\xa4\x8d\xb8\x87\x92\xb3\x12\x73\xb9\x05\x81\x25\x9c\x9d\xb5\xb4\x27\x6a\x80\xc0\x54\x54\x1c\x6b\x0f\x4f\x7d\xd8\xcd\x8b\x44\x40\xc9\x71\x86\x73\x35\x73\x6c\x01\xc1\xe7\x67\x2f\x3e\x3f\x73\xe8\xfb\x03\x14\x49\x77\x8f\x9b\xba\x74\x78\xae\xa3\x3d\xe3\x24\x7c\xab\xfa\x1c\x2f\x38\x16\xad\x3f\xd8\xcc\xd8\x2e\x2b\x71\x92\x7b\xc7\xf3\x86\xcb\xa9\x65\xea\x50\x3f\x00\x30\xb8\xdc\xaa\x31\x71\x0e\xa2\xca\x32\x2c\xc4\xa2\x2a\x8a\xad\xb3\x43\x46\xb1\x7a\x7c\x9d\xd6\x39\x12\x2f\xbd\x8e\x4e\x97\xce\x33\xd3\x87\xe1\x0e\xe9\x3c\x83\x6e\x18\xee\x90\xce\x0a\x77\xb7\xda\x0d\x94\x6d\xab\x61\x24\x55\xc7\xab\x97\xa5\x64\x5d\x16\x58\xf5\x3b\x9c\x37\x8b\x66\x89\xb8\x9a\x9e\x72\x5c\x16\x6c\xab\x3e\x39\x94\x38\x16\xfa\x51\xac\x17\xf2\x4a\xf7\xd3\x5d\x8c\x1e\xde\xde\xdd\xdd\x80\x90\x48\x56\x02\x32\x96\x9b\xf5\xa2\xfa\xe3\x68\x16\x9e\x28\xd4\x1e\x20\xde\xad\x51\x74\xec\x4c\xaf\x71\x67\xef\x2e\x7e\x87\xdf\xa6\xef\x3f\x5d\xcc\x94\x12\x6b\xe4\x6a\x83\x58\x6e\xab\xe8\xd9\xaf\x97\xef\x2f\x66\x90\x31\xaa\xc6\x36\xe5\x4a\x5a\xe1\xfe\x7e\x7b\x7d\xe5\xd7\x62\x00\xd0\x9e\x42\x94\x49\x7c\x26\xd9\x59\x03\xcc\xb8\x50\xc0\x6f\xae\xe1\xea\xfa\x0e\xee\x3e\x4e\xaf\x6e\xdf\x4f\xef\x2e\xe0\xee\xed\x05\x9c\x6c\xb1\x38\x81\xe9\xd5\x1b\x38\xa1\xec\xe4\x1c\xe0\xee\xed\xf5\xed\x05\x4c\x3f\x5e\xc0\xaf\x97\xff\xbc\x78\x03\xaf\xdf\x5f\xc2\xf4\xe3\xdf\x3e\x7d\xb8\xb8\xba\x33\xf5\x70\xdb\x28\x6e\x0a\xde\x58\xed\x03\x11\x64\x4e\x0a\x22\xb7\x30\xbb\x7d\x7d\x7d\x73\x31\x7b\x05\x5b\x2c\xe0\x67\x10\x2b\xc4\x71\x3e\x01\xca\xe0\x67\x28\x39\x79\x40\xd2\xe5\x03\x0d\x04\xb3\xb6\x88\xa8\xd6\x6b\xc4\xc9\xd7\x5d\xc7\xca\xb1\x44\xa4\x10\xaf\xba\xab\x7b\x13\x43\xe0\x78\x41\xbe\xc0\xe7\x67\xff\xef\xf3\x33\x40\x1c\xc3\x9c\x55\x34\x77\xe8\x38\x1e\xd7\xaa\x2e\xa1\x59\x51\xe5\x18\xca\x6a\x5e\x90\xac\xd8\xd6\x25\x3d\x88\x67\x72\x2c\xaa\xc2\x65\x3c\x89\x20\xf6\x4d\xb0\x2f\x06\x43\xd1\x2d\x08\x17\x12\x66\xb7\xef\x2e\x6f\x66\x40\xab\xf5\x1c\xf3\xfe\x6c\xcd\xd9\x3a\xac\xd5\x18\x44\xab\x8a\x8c\x16\x5b\xe0\x58\x56\x9c\xc2\xec\xfd\xe5\x87\xcb\x3b\x3f\x56\xc6\x8a\xc2\xec\x3f\x38\x34\x1c\x01\x68\x55\xb0\xf1\xd6\x5c\x66\xde\x7c\x0e\x04\xc1\xcc\x36\x51\x4d\x4d\x22\x82\x61\x07\x0c\xf6\x9e\xa1\x16\x4c\x7e\x0d\x7b\x24\x01\x77\x51\xd1\xaa\x4a\x69\x5d\x54\x3d\x4a\x25\xf8\x83\x41\x00\x7f\x2c\xa2\x20\xca\xd5\xcd\x30\xd7\x7b\xac\x36\x9f\x79\xa9\x7d\x66\x45\x71\x62\xe4\xd5\xbe\x32\xde\x18\x51\xee\xad\xe4\x23\x0b\x89\x29\xc8\x3d\xde\xfa\x45\xdc\xe3\xed\xc8\x62\x8c\x13\xe1\x2d\x84\xb1\x40\x54\xc9\x95\x5f\x82\xa2\x18\x5a\x8a\xe3\xc8\x88\xb0\xea\xe9\xcd\x25\xac\x98\x90\x86\xe9\x95\xc6\xe8\xff\x66\x42\xa0\x25\x51\xbf\xd4\x1b\x14\xc4\x04\x4c\x13\xed\xff\x48\xa2\x22\xda\xa6\x45\xd5\xdd\x8e\x29\x5e\x03\x19\x59\xef\x3e\xfe\x48\xf1\x0f\x98\x0b\xe5\xce\xec\x10\xea\x5f\x92\x94\xf0\xa3\xd8\xf7\x70\x2b\xb9\x52\x73\x61\xa6\x17\x10\x95\xc0\x7c\x17\xce\x5b\xa1\x07\x6c\xf7\x50\x5f\x69\x11\x4d\x12\x45\xe4\x0a\xef\x49\x44\xd9\x23\x19\x56\xaf\xba\x59\x35\x58\x76\xa0\x0a\x9c\x87\x77\x6e\xc6\xa2\x46\x98\xc2\xae\x06\x76\x4d\x18\x19\x3d\x8a\x00\x18\x34\x6b\x9d\x8a\xe7\xa3\x27\xae\x3e\x86\x7d\xa9\x4b\x23\xe6\xe0\x3d\xa2\x40\x79\x0c\xf5\xa8\x79\x38\x02\x22\x7a\x26\xd6\x58\x69\xf3\x6a\xcb\x12\x3b\x4b\xa6\xc9\xe8\x71\xc4\xce\x61\x91\x22\x6c\x1c\x49\x1d\x40\x73\x25\xda\xbc\xe1\x49\x19\xf1\x93\x4a\x73\xc8\x95\x38\xba\xc7\x97\xe9\x90\xcb\x2a\xca\xcc\x8a\x39\x5e\xa0\xaa\x68\x26\x45\xb6\x50\xc6\x59\xff\xa6\x00\x49\x51\xc0\x1c\xab\x01\x37\x77\x97\x74\x08\x92\x5b\xa5\x26\x46\xb3\x07\x28\x57\x48\x42\x86\x68\xa4\x3a\x09\x28\xee\x5d\x19\xff\x88\xb2\x0c\x8e\x27\x9d\xfe\xe8\x0a\xe6\x75\x28\x7c\x10\xf7\xd8\xa5\x45\x87\xc0\x93\x46\xa7\x3a\x93\x37\x7b\x4e\x13\x04\xf2\xf0\x94\xfd\x06\x53\xf0\x34\x51\x00\xa8\xb6\xce\x20\x56\x43\xe7\x81\x0b\xe5\xe3\xec\x53\x79\xa0\x5e\xbf\x8f\xd3\xac\x4b\xe7\x98\x46\xee\x29\xdb\xb8\x40\x9a\xaf\x81\x3a\x9a\x57\xa4\x70\x05\x4d\xf6\xa9\x62\xa0\xea\x15\x78\x1c\x62\x43\x1c\xb7\xb5\xb1\x63\x23\xd4\x04\xd1\xd2\x52\x1c\x23\x61\x22\xb2\x58\xdd\xdd\xe4\x90\x2e\xaa\xd2\x62\x2d\xb5\x4f\x6d\xd7\xb4\x28\xc2\xc1\x87\x3d\x22\x8f\x8e\xb3\xab\xe9\x87\x8b\xdb\x9b\xe9\xeb\x0b\x7f\x5a\x6c\x97\x2e\xd0\x9c\x05\xd3\x09\xae\x3b\xf9\xb0\x20\x85\xf1\x58\xd5\x1f\xe9\x5b\x53\xc9\x80\x01\x05\x39\x46\x79\xd7\xa3\x3a\x82\x8a\x03\x20\x03\x4a\x22\xbd\xd5\x03\x19\xa3\x0b\xb2\xac\xb8\x31\xb8\x1d\x7a\x82\x6e\xf1\x48\xde\xcc\x25\xed\x76\xa0\x3c\xe7\x0a\xec\xa4\x5d\x60\xc6\x27\x2b\x45\x00\x58\x15\xf8\xc7\x5e\xfc\xcc\x54\xec\x86\x93\x3a\x1d\xa3\xe2\x61\x7f\x3a\x0d\x23\x10\x01\xd4\x19\x98\xc1\xb0\x9f\xa1\xb2\x47\x73\x4d\xdb\x28\x0a\x57\x74\xb6\x43\x11\x30\x94\x0e\xe9\xc0\xad\xdf\x30\x82\xd7\xc9\x34\xec\x26\x31\x35\x61\xb5\xe8\x64\xb3\x6f\x1c\x12\x11\xaa\xb3\x1e\x49\x28\x53\xa3\x43\x3b\x34\x4f\x23\x0c\xe1\xcf\xd2\x30\xfc\xc9\xf5\xe6\xe6\x73\x7a\xa0\x9a\xd2\xec\xd9\x79\x9c\xd0\x2e\x55\x44\x7e\xd0\x88\xaa\x0b\xb0\x47\x08\xaf\x37\x20\xd9\x62\xac\x1a\x51\x40\xde\x76\xec\x37\x83\x5a\x2e\x7c\xfb\x76\x6e\x60\x23\x5a\x33\xc4\xed\xcb\x67\xa4\x78\xe3\xeb\x0f\xfb\x54\x71\x59\x8c\x23\xea\x33\x8c\x10\x95\xbf\x98\xd8\x1f\x9c\x6c\xb1\x99\x8b\x8a\xb1\x9f\x5b\xa8\xa1\xc6\xe5\x2c\xa6\x80\x86\x82\x48\x06\x7d\x44\xc3\x84\x11\xa2\xb2\x18\x13\x1b\xc6\xc9\xe6\x1d\xa7\x02\x03\x54\xd8\xb7\x93\x9c\xe0\x87\x51\xd5\x15\x83\x11\xcc\x5e\x4c\xac\x2c\x2b\x8b\x2f\x6f\xd1\x37\x11\x76\x28\xe2\x32\x16\xc7\x4c\x83\x41\x84\xa8\x5c\xc5\xd4\x49\xd0\xc5\xe6\xcf\x52\xf4\x79\x6e\x7b\x44\x69\x51\xfd\x83\x4d\x1f\x67\x09\x92\x20\xd2\x73\x02\xcd\xe9\xa0\x27\x4a\x08\x8c\x07\xff\xa1\xd9\x2f\xda\x28\x8e\x92\xfa\x32\x04\xc9\x15\x5f\x60\x6b\x24\x49\x86\x8a\x62\xdb\x73\xb8\xd1\x42\xe2\x7a\x96\x50\xf3\x06\x71\x26\x42\x25\x20\x44\xa8\xd0\xf3\x5e\xe7\x78\xc1\x38\x36\x9d\x2a\x41\x89\x10\x46\x20\x03\x48\xb3\xd5\x69\x3a\xc1\xb4\x9e\x1e\x71\x60\x7d\xa6\x4c\x56\xe4\xf7\xc1\x15\x5a\x43\xe7\x48\xfd\x11\x52\x8d\x06\xb7\x6f\xde\x01\xe2\x92\x2c\x50\x26\x5d\x6a\xda\x69\xe3\x61\x27\xb0\xd1\xa1\x66\xb3\x4e\x7e\x7d\xfd\xe1\xe6\xfa\x4a\x19\x77\x9d\x59\x86\x54\xbd\xb2\xec\x1e\xf3\x09\x10\x56\x1f\x03\x9c\x23\xb1\x52\xcd\x91\xa2\x52\x8a\x9c\xeb\xdb\x3d\x39\xce\x04\x4c\x25\x22\x63\xeb\x92\x51\x4c\x65\x2f\xcd\x79\x4d\x84\x20\x74\x79\x0e\xd7\x14\x77\x48\x4e\x7b\x85\x61\xbc\x95\xf1\xbc\x3d\x6b\x2b\x4a\x9c\xe9\x43\x84\x9e\xd4\xcc\xa7\x95\x1b\x5c\x84\x50\xcc\x95\x53\x35\x74\xe9\xe1\x65\xb7\x1f\x9b\x43\x62\xf5\x87\x2a\x8d\xea\x61\x8c\xfe\xb1\x16\xae\xe3\xe6\xaa\x76\x14\x35\xa8\xc2\x9d\xed\x58\x40\x64\x9c\x94\x12\x4e\x5b\xa1\xcf\xcd\xcc\xa3\x6d\x65\x97\xc2\xda\x1c\xcf\xcd\x09\xc7\x99\x64\x7c\x7b\xfe\x99\xde\xb5\x71\x82\xde\xc5\x05\x1d\x70\xb6\x80\x8d\xb8\x6f\x3e\x8b\x09\x08\x56\xf1\xcc\x24\x79\x28\x45\xe0\x50\x11\x42\x25\x83\x2d\xab\x4c\x53\x00\xa6\x0f\x84\x33\xaa\x9a\xd1\x35\xf9\x79\x1a\xfe\x44\x27\xa2\xd6\x3f\xf7\x27\xd5\x73\xf8\x4d\x9b\x7c\xfb\xf9\xa0\x53\xc5\xf4\xa9\xef\x23\xdb\x59\xec\x36\x9e\xd8\x38\x0d\xa8\xe0\x18\xe5\x5b\xb3\x8a\x10\xe7\x00\x6f\x8c\x2f\x46\xa4\x39\x28\x8c\x25\xdf\xba\xee\xa5\x18\x01\xe8\x54\xb0\x5f\x07\xba\xaa\x6a\xd3\x4a\x3a\x57\x38\x08\xca\xa9\x94\xa9\x67\x10\xf7\xaa\x28\x8c\x9a\xed\xbc\x4d\xc7\xe6\x91\x74\xd8\xbc\x47\xbd\x11\xa0\x56\x45\xdf\xb0\x0d\x2d\x18\xca\x71\x0e\xbb\x0b\x43\xc8\xf5\x2d\x08\x89\xb8\x3e\x73\x5a\x96\xe7\xf0\x89\x7e\x25\x65\xbf\xc1\x68\x0e\xac\xc4\xb4\x09\x3d\xff\x07\x67\x3a\x0f\xe4\x9f\x19\xcb\x3d\x39\x5b\x4f\x26\x2e\x76\x71\xa6\x40\x2b\x5e\x94\x48\xae\x14\xee\xed\x9b\x77\x43\x96\x67\x5e\x14\xab\x2a\xb7\xe6\xea\x8b\x45\x7b\xbd\x82\xc0\xd4\xc4\xed\x0f\x3a\x70\x8c\x4e\x83\xe1\xec\x27\xc8\x39\x67\x1d\x3f\x4e\xd9\xfc\x7e\x0f\x0d\x6a\x94\x86\xe1\x53\x83\x95\x5b\x85\x50\x5f\x16\xc2\xb1\x28\x19\x15\xd8\x8c\xd8\x0a\x32\x56\x95\x04\x1c\x77\x1f\x6e\xba\xcf\x51\x87\xbf\x31\xa8\x9e\x9a\xab\xe8\xdf\xbe\x92\xb2\x54\x85\x1e\xd8\x7c\x71\x08\x5e\x15\x24\xe2\x7c\x94\x06\x11\x00\x21\x2f\xbc\xbe\xbe\x22\xec\x86\x37\x84\x56\xc0\x05\xe1\xb8\x21\x01\xfc\xe0\x3e\xad\x63\x21\x0c\x0c\x47\x3d\x8e\x61\x7e\x5c\x04\x84\x37\xfc\x51\xb3\xe2\x1c\x5e\xf4\xef\x7a\x78\xb1\x8b\x09\xeb\x4a\x22\xb9\x42\x24\x79\x44\x6c\x64\x18\x66\x28\xd0\x5c\xa3\x86\x63\xcd\x0d\xe1\x0f\x0d\x01\x34\x7b\x8e\x67\x67\xf5\x61\x8b\xd6\x53\xeb\xa4\xed\xf2\xe5\x03\x2a\x74\x7e\xa7\x21\xee\x2c\x83\x8c\x06\x8c\x6b\x05\x02\xfb\x9a\xc7\x91\x11\x17\x9d\x1f\x67\xad\x51\x20\x51\x31\xfa\x06\x22\x3d\x4c\x6f\xe3\x8c\x8d\xd4\xd7\xbc\xfd\xb8\x7a\x03\x38\x2e\x5e\x8f\xe8\x00\xf4\xb8\xc0\xfd\xb8\x36\x8b\x02\x89\x0a\xdf\xa7\xb7\x99\x8f\xd3\x19\xc4\xf7\x0f\x14\x5d\x8a\x88\x7d\xbe\x71\x75\x17\x46\x08\x86\xf1\xd3\x2b\xcd\xc5\xe5\x0b\xe6\xfb\xeb\x6c\x8f\x28\x2e\xa4\x3f\xae\xe6\xa2\x40\xa2\x02\xfb\xe9\x15\xe8\xe3\xf4\x87\xf7\x03\x2e\xc7\x21\x5d\x7a\x7c\xbd\x61\x7d\xaa\x10\x7b\x12\x7e\x40\x7d\x42\x1f\xd8\x7d\xbf\x11\xd5\xdf\xed\x11\x5f\xac\xe6\x2c\x7d\x60\xce\xa4\x29\x61\x9c\xb7\x27\x1e\xf4\xc7\xfa\x60\x41\x93\x39\x14\xb1\x76\xff\x4e\xc2\x7f\xa8\x6f\xd1\x14\xe9\x28\x3b\x0c\x03\xc1\xac\x2d\xdf\x60\xe9\xea\x9b\x4d\x5f\xdf\x5d\x5e\x5f\xfd\x71\x35\xfd\xe0\x4c\xed\xf3\x30\x04\x62\xf7\x0d\xe7\xb1\x4f\xef\x0e\xc5\xb5\x1f\xf8\x6c\xaf\xec\x1a\x70\xf0\x3c\x92\x39\xf2\xdc\xb9\x0d\x6d\xc8\xb1\xf3\x10\x8e\xfd\x80\xd5\xc1\x55\x96\x3a\x46\x0b\x02\x2b\x38\xa9\x8c\x4b\x2d\x6d\x9b\x8f\x7f\x56\x4c\x5f\x67\xb0\x50\x03\xd3\xb6\x91\x0e\xe6\x08\x91\x6b\x41\x7d\x5c\x19\xce\x48\x40\xeb\x62\xcf\x8c\x73\xfd\xf8\x38\x4b\x39\xde\x97\x04\x31\x50\x09\xdd\x1e\x47\xd0\x64\x1f\xc7\x71\xa6\xd9\x7b\x72\xdf\x7b\x14\x5f\x8f\x2b\xae\x1e\x69\x3e\xc6\xc7\xa2\xfb\x9e\x71\x52\xd4\x79\x9f\x35\x26\x38\x66\x42\x24\xa3\xe3\x63\x61\x18\x8f\x32\xac\xc4\xba\x4f\x8e\xd1\x24\x16\x23\x78\xce\x6c\x90\x0e\x09\x00\x21\x4f\xa9\xc4\x54\xf4\x2f\x10\xd1\x61\xa4\x3a\x8e\x95\xe2\x13\x45\x23\xc5\xad\x98\xfb\x51\xbe\x9c\x70\x05\xb9\x59\xa9\x92\xb6\xa0\xe3\x96\xd3\x23\x24\x44\xd4\x2a\x28\x04\x9c\xf7\xb3\xc9\x8f\x57\x86\x23\x88\x88\x6b\x87\x27\xd2\x7f\x1c\x7a\x44\xef\x96\x88\x8f\xed\xdc\x01\x08\x8f\x12\x1c\xa3\x7c\xa4\x12\x91\x10\x47\xe8\x4c\x4d\xc8\xf8\xe9\x3a\x93\x5f\xc2\x48\x3b\x3c\x8a\xfa\x03\xd1\x83\xc3\xfb\x20\x03\x48\x00\x88\x52\xa0\x37\x69\x1f\x5c\x0c\xd5\x4a\x90\xdb\x12\x3b\x17\xf9\xe3\x30\x03\x5b\x0e\xf5\x3d\xd9\xc1\x1d\x87\x86\xce\x17\xf3\x36\x37\xc0\x22\xdf\x05\x35\x36\xca\x40\x45\xd6\xd7\xb9\x9b\x75\x6f\x93\x48\x11\x7f\x2f\xfc\x00\xa0\xb8\x5e\xd1\x59\x89\x0f\xb6\x7d\x2f\x46\x54\x54\xb9\x46\x48\x0f\x2a\x5b\x18\x63\x63\xca\x86\xb5\x17\xf4\xa5\x0d\xde\xc8\x90\x72\x2a\x72\x5c\x38\x19\xa5\x3e\xfd\xe0\xe2\x8b\x0a\x1a\x27\x37\x89\x87\xd1\x91\x10\xa7\xe3\x44\xde\x8e\xd6\xa7\x89\x8b\x7a\x8d\xb2\xe8\x18\x0c\x6f\xf5\x19\x80\x63\xee\xea\x0d\x41\x74\xc6\xe8\xbd\xb5\xdd\x21\x88\x88\xd0\x27\x9b\xa3\x95\xc9\x9e\xb1\xea\xd3\xd2\xa7\x61\x37\x14\x9f\x6c\xc0\x0e\x26\x5f\xf8\xde\xab\x68\x9f\x26\x2e\x78\x3f\xca\x78\x63\x30\xa2\x42\xf7\xc9\x55\xe7\x61\xf4\x07\xee\xeb\x09\x19\x08\xed\x3e\x62\xa1\x46\xce\xe6\x4b\x1d\x21\x32\x39\x8a\xa1\xd7\x02\xc6\xe3\xa6\x6f\x0c\x34\x80\x4f\xb4\x2f\x90\x02\x6f\x55\xfe\x35\xab\x8a\x5c\x4f\x36\x0b\x42\x73\x38\x59\x23\x42\x4f\x60\x8d\xe5\x8a\xe9\xb2\x77\xa0\x1c\xfa\xa5\x20\x44\x0f\x1c\x23\x76\xf6\xd2\x0d\xfc\xd7\xfd\xd0\xd3\xde\xd3\x25\xda\xd5\x64\xfc\x70\x6a\x0e\x6a\x76\x0c\xe4\x98\x53\xeb\x43\x0f\x34\x39\x59\xad\x42\xad\x05\x11\x55\x59\x32\xde\xe9\xde\xbc\xa2\x92\xac\x5d\x7d\x30\x0d\xc3\xed\x89\xd7\x9b\xf3\x35\xbd\xbe\xec\x11\xc1\xf9\x57\x52\xb6\x69\xed\xc0\xf1\x9f\x15\xe1\x58\xd4\xd9\xdb\x3a\xdf\x4c\x27\x1d\x1b\x9e\x7b\x65\xad\xf8\x4b\x59\x90\x8c\x48\xe7\x73\x78\x4f\x24\xcc\x5a\xb0\xbf\xa3\x07\xd4\xf6\xe8\x1a\x10\xce\xce\xd6\xba\xd3\xb3\x06\xd9\x5c\xcd\x59\x15\xc5\xf6\xac\xff\xa6\x8e\xde\x27\x5c\x61\xd0\xf4\x59\x81\x84\x6b\xc5\x73\x7c\x39\x8e\x7d\x27\x8c\x24\x98\xed\x23\x40\x02\x28\x92\xe4\xa1\xad\x91\xd3\x36\xb2\x58\x72\xf6\x40\x72\x2c\x00\xe9\x64\x68\x24\x89\xb2\x4f\xfc\x05\x67\x95\x6c\x4d\xb5\xa2\xcf\x9d\xbb\x55\x47\x16\x63\x5f\x22\x88\x16\x21\x6f\xf2\x7c\xc9\x1a\x2d\x31\x9c\xaa\xe9\x41\xae\x80\x51\x78\xa3\x7f\x7f\x5b\xcd\x9f\xd7\x60\x1d\x13\x70\x2d\x10\x46\xe3\x46\xd5\x7d\x7b\xdd\xbc\x9a\x33\x0e\x16\x23\x91\x35\x1b\x00\x89\x52\x64\x6f\xfb\x07\x04\xfe\xb3\xc2\x34\xc3\xdd\xc9\xac\xf5\xb4\x23\xf5\x4a\xc3\xb4\xab\xb9\xc2\x30\x7b\x77\x79\xf5\x66\xd6\x58\x77\x7f\x24\x82\x53\xfc\x05\xad\xcb\x02\xbf\x04\xb1\x21\x0b\xf9\xb2\xbe\xf8\x69\x02\x94\xe5\xf8\x3f\xa2\xf9\xbf\xd3\x48\x8f\x86\xef\x54\xbf\xdb\x35\x6b\x70\x4c\x25\xdf\x42\xc9\x08\x95\x70\xba\xa8\xa8\xf9\x95\xf1\x83\x6e\x5d\xcf\xd6\x1a\x62\xb3\xc2\x14\x90\x79\x05\x74\x5e\x60\x5f\x89\x9e\x4c\xa4\xc7\xef\x3f\xce\xfe\xfa\x30\x2c\x67\xdd\xab\x26\x64\x95\x6c\xef\x23\x26\x14\xd6\xa4\x28\x88\xc0\x19\xa3\xb9\xa8\xcf\xe2\x6d\x56\x24\x5b\x75\x2b\x8b\x08\x90\x98\xaf\x09\x55\x66\xeb\xa9\xe7\xa3\xc0\x3b\x95\x5f\xa3\x2f\x64\x5d\xad\x61\x8d\xd7\x8c\x6f\xbb\x42\x3e\xfc\xa2\x1d\xcb\xe0\x20\x96\x8a\x12\x54\xa5\x60\x4b\x10\xe4\x2b\x1e\xab\x4c\x1c\x8e\xfd\x58\x55\xc1\xf4\x43\x9c\xfe\xa1\x68\x9f\x2a\x06\xea\x15\x88\x15\xdb\x80\xbe\xc7\x5a\x69\xf0\x60\xce\xae\x98\x4b\xb4\xe1\xb4\xa2\x05\x16\x62\x77\xcb\x1c\x6a\x6e\xa2\x71\xf5\xc4\xa3\xc1\x5b\x95\x8f\xb8\x10\xbc\x5d\x84\x1c\xeb\x86\x71\x17\xa0\x55\x41\xff\x7d\xe0\x07\x50\x23\xef\x17\xf7\xe1\x05\x92\x63\xea\x5e\x99\x98\xc3\x32\x51\x3f\xf4\x7e\xd1\x19\x13\x0b\x42\xf5\xb3\xad\xe1\xdc\x99\x27\x12\x1b\x11\x73\x37\x96\x17\x17\x77\x6f\x68\x3d\x01\x81\x20\xe2\x01\xd9\xa0\xc3\xfa\x03\x0f\xe8\x0f\x8c\x0d\xd4\xaa\x3e\x65\x7c\x20\x45\x84\x37\x34\x68\x80\x02\xe1\xc1\x9a\x28\x72\xa5\x6f\xa8\x07\xac\xf0\x0f\x18\x93\x04\xea\xd2\x93\x7c\x58\x70\xc1\x03\xe1\xf4\x5b\xfa\x83\xb0\x6a\x89\x13\x67\xc4\xf6\x44\x1f\xc4\x6d\x2e\xfb\x01\x24\x15\xbe\x72\x01\x1e\x1f\x9f\x3b\x63\x6d\x47\x16\x12\x15\x3f\xad\xe5\xc5\x86\xaa\x9d\x6c\xee\x9c\x71\x65\xc9\x6c\x29\xea\x05\x47\x94\x0d\xba\x79\x22\x2c\x44\x33\x2e\xea\x38\xe0\x20\xdb\xf4\x23\x0c\x53\x61\xb0\xb5\xc6\x62\x45\xa8\xd5\x31\xaa\xc1\x75\x13\xc2\x18\xaa\xc6\xe0\xfa\x89\x47\xb3\x67\xd9\xb1\xa2\xd0\x91\x62\x42\x2b\x56\x89\xc2\x3c\xb7\xac\x7c\xce\x35\x16\x62\xf7\x0a\x49\x7d\xdc\x57\xb9\x15\x15\xa5\xbb\x15\xb3\x6b\x1e\x1b\x8f\x6b\x55\xf7\x46\xc1\x06\xd7\x1b\xfb\x54\xf6\x34\x14\xaa\x16\x1c\xaf\x25\x2f\xce\x32\x7d\x55\xe0\x17\xe2\x4c\xee\xb3\xd3\x3a\x35\xd4\xa7\x0b\xfb\x0d\xa2\xcc\xd8\x39\xba\xf8\x79\xac\x62\x3e\xd3\x69\xc7\xfc\x4e\xf6\xc6\x44\xd5\xf4\xee\x71\x36\x8e\xd7\x9e\x6f\xdb\xd1\x4e\x4d\xcf\x6d\xc4\xb7\x49\x73\x45\xb4\xeb\xb1\xbb\x73\x6a\x93\x71\xc6\x38\xf6\xad\xf7\x70\x4c\xe7\xde\x05\x3a\xd0\xc1\x3f\x80\xdb\x39\xe5\xb5\x87\xd9\xae\x08\x35\x7f\x7d\x7f\xf8\x1a\x7d\x51\x53\x5f\xd0\xaf\xfc\x8e\x0a\x38\xf6\xc2\x4d\xa5\x2e\xaa\x7a\xef\xaa\x6e\xfd\x1c\x9b\xfb\x32\x7c\x3b\xe4\x61\x4e\xab\xc8\xba\xb4\xdd\xb2\x99\x43\xb9\x64\x8d\x85\x44\xeb\x52\x00\x46\xbc\x20\x58\x2d\xa4\x11\x85\xd9\xa7\x9b\xbb\xeb\xd9\x2b\x58\x63\x24\x2a\x6e\xb6\xcd\x7a\x21\x0a\x41\x68\x86\xe1\x6e\x35\x81\xbf\xfc\x75\x02\x7f\x47\x14\xfe\xfa\x3f\xff\xff\x2f\x0e\xb5\xbf\x97\xf4\xa1\x45\x2f\x90\x6c\x45\xdf\x5e\x5e\xbd\xbe\xf8\x9e\x25\x3f\x86\xf0\x88\x95\x6a\x6b\x29\x71\x17\x31\x59\x58\x5c\xb5\xab\x6f\x69\x30\xd1\xe4\x02\x89\x88\xa5\x85\x9f\xc7\x5e\x16\xc9\x49\xb9\xab\x35\xbd\x76\x15\x92\x63\xb4\xee\x5e\xff\xed\x2a\x55\x1c\xb3\x43\x30\x2b\xa1\xac\xe7\x24\x13\x97\x9b\xdd\x5e\xbc\xbe\xbe\x7a\x73\x3b\x83\xba\x55\x9c\x62\x23\x58\x1d\x42\x11\x97\x2d\x6b\x7f\x26\x14\x87\x20\x80\x96\xae\xbb\x6c\x86\x20\x0d\x51\xe9\xc3\xe5\xd5\xa7\xbb\x8b\xdb\x19\xac\x09\xad\x24\x1e\xa1\x92\x15\x69\x88\x4a\x6f\xaf\x3f\x7d\xbc\x9d\xc1\x8a\x55\x7c\x84\x3a\x07\x28\x43\x54\x79\x33\xfd\xfd\x76\x06\x39\xda\x8e\x50\x64\x0f\x23\x70\x02\x48\x2f\x16\x9b\xe3\x26\x27\xed\x79\x1c\x04\xf7\x78\xfb\xc2\x9c\x5b\x2f\x11\x71\x9d\x44\x4d\xc7\x71\x9e\x20\xd9\x9d\x64\x6a\xb3\x16\x75\x08\x2a\xe5\x28\x4f\x3c\x86\xfb\x2c\xcf\xee\x1d\xcf\xe1\x7a\x24\x80\xd8\x9b\xa7\xdd\x72\xd6\xbb\x24\x6a\x18\xca\x58\x8e\x77\x9b\xce\x0a\xab\xde\xbf\xcd\x9d\xde\x62\x1a\x48\x8c\x22\x44\xa4\x4a\xed\x71\xa4\x8a\x80\xe9\x9e\xc6\x44\x00\xd3\xbe\x0b\x2a\x06\xc8\xf7\xc3\xf9\x94\xab\xe7\xb7\xcb\x37\x09\x35\xe0\xe0\xb1\x8b\x69\x5f\x29\x6d\x9b\xaa\x7e\xe8\xb8\x79\x2a\x3c\xa2\xb9\x93\x30\x62\xd4\x88\x29\xab\x87\xc3\x21\x42\x5f\xdc\x18\x8f\xef\x20\xf7\x80\x4f\xda\x43\xa3\x3a\x05\xba\xdb\x05\xa2\xaa\x31\x05\xc3\xa1\x46\xc3\x1c\x5f\x4c\x37\x47\xaa\x08\x50\x6d\xb2\x2d\x18\xca\xa3\xba\x4b\x3a\x90\xab\xa3\x34\x14\x9d\x50\x33\x31\x8e\x9b\x5e\x46\x99\xbc\xa7\x66\x38\xf4\x74\x9e\x44\x1c\xab\x3a\xcd\x55\x2c\x0d\xd9\xa9\x78\x7e\xae\xc6\xdc\xa6\x70\xc1\xb7\x29\x3c\x8c\xb1\x02\xf5\x20\x8f\xf8\x52\x3c\x3e\x0e\x96\xed\xc1\x70\x2c\xed\x51\xe6\x4e\x69\x6a\xbe\xda\x83\xd5\x12\x0a\x8c\x9c\xf9\xec\xed\x67\x2b\x33\x65\xb0\x66\x5c\xbf\x83\xe5\xf2\xad\x7b\x24\xf6\xfd\x19\xb6\x37\x5b\x86\xba\x8d\x87\xc1\xe5\x7c\xb9\x5f\x3c\xf0\x3d\x74\xb0\xdb\x39\x0b\x1d\x0e\x77\x00\xd4\x49\x1c\xce\x8c\x60\xf3\xd5\x39\x05\x35\xe7\x82\x1b\xaf\xaa\xcd\x1b\xea\x7b\x5d\x9e\x09\x29\x16\xc1\xe9\x17\xb5\x0f\xcd\xd5\xb9\x7b\xf1\xce\x50\x88\xd3\x55\xea\x96\x6f\x5f\x67\xcf\xd8\xe1\xe1\xf1\x76\xdb\x05\xc1\x85\x4e\xca\x94\xb8\x5b\x1d\x2e\x49\x41\xb6\x01\xbb\x28\x13\xc8\x89\x28\x0b\xb4\x35\xb7\xac\x29\x60\x7d\x6c\x0c\x17\xc3\xb7\x58\x42\x98\xc9\xc9\xf2\xc7\x51\x32\x05\x31\xa8\x62\xe3\x80\x1c\x51\xc7\x64\xc8\xa0\x92\xfd\x6b\xe9\xc7\x6b\x98\x86\x17\x54\xef\xe0\x66\x9d\xf1\x1a\x26\x43\xfa\x86\x81\x12\xc9\xd5\x04\x10\x6d\x5e\xef\x9b\x9b\xcb\x23\x10\x4d\x77\xef\x86\x03\x86\x14\x6c\x10\x1a\xc8\x54\x7d\x02\xfc\x16\xf1\xf6\x9c\xea\xda\x89\xd8\x95\x23\x38\x4a\x27\xc3\x0c\xd7\xc5\x55\x0f\xb1\xdc\x71\xa7\x17\xa7\x37\x97\xe9\xc7\x15\xfb\x4c\x51\xe7\x13\x55\x53\x7d\xfb\x76\x6e\x2e\x9c\x05\xf3\xb6\xf5\xfc\xf1\xb1\x8d\xc9\xf4\xcf\xbc\x28\x73\xaf\x8a\xfa\x7a\xda\xe8\xa3\x8c\xe3\x64\x8c\x29\xc6\x91\x35\x8e\x54\xee\xe0\x48\x6b\x49\x8e\x71\x30\x36\x80\x12\x3e\xf9\x3b\xbd\xb9\x8c\x39\xf6\xab\xc8\x62\x8f\x9a\xba\x21\x1d\xc4\x71\x07\x42\xd3\xac\xdf\xca\x14\x75\x14\xf4\x29\xad\xff\x38\x32\x9c\xf9\x25\xee\x9a\x6f\xbe\x46\xa4\x24\x28\xdd\x86\x9f\x56\x72\x73\x7b\x4f\x16\x52\x8f\xee\x7d\x9a\xb8\x93\x85\x69\xc6\x62\x65\x8a\x3a\x3b\x58\x37\xe4\x1c\x09\x1c\x69\x02\x3e\xce\x28\x91\x3b\xbb\xd1\xbb\xb3\xc3\xa4\x07\x40\x12\x15\xe9\x18\xf0\x31\x54\x0a\xc0\xb9\x53\x2a\xa7\x37\x97\xde\x5c\x4a\xfd\x3d\x3e\xaf\x51\x35\x51\x11\x73\x2c\x2e\x96\xdb\x79\x0a\xcd\x14\xf7\xc0\x47\x68\x7c\xa6\x73\xa8\x1f\x57\xd8\x5d\xab\xfb\xb2\xa9\x25\xe1\xf5\x7f\x46\x02\xdb\x9d\xc3\x9b\xcb\x6e\x3e\x80\x7e\x32\x77\x06\xa7\xcd\xd3\xe1\xed\x0b\xba\xae\xfc\xee\x78\x7e\xef\xb2\x7d\xf6\xcb\xf4\xf6\xe2\x8f\x9b\xe9\xdd\xdb\x99\xaa\xf9\xdd\x69\x81\xe9\xcd\xa5\xfe\xd9\x84\xfd\x0a\x7d\x7c\x2a\xb0\x90\x4f\xc3\xf2\xf6\x0e\x65\x63\x41\x9b\xaf\x89\x5c\x40\x15\x2f\x4c\x37\x60\x25\x36\x0f\xd9\x9a\xff\x9a\xa9\xc1\xdf\xa7\x22\x78\x7d\x2e\xbf\xea\x69\xc6\x6f\xef\x05\x4d\xa1\x1b\xc1\x54\x74\x4d\x65\xec\x7c\xfc\x56\x1e\xac\xd1\x16\x50\x21\x58\x42\x74\xe3\xe9\xc4\x3a\xfb\x5c\xf3\x9e\x42\x1d\x53\x59\x92\x3a\xb5\xe5\xe4\x85\x33\x40\x12\x64\x8b\x72\xfd\xc4\x06\x99\xeb\x28\x63\x9e\x17\x88\x64\xb6\x67\xb5\xf5\x6e\x46\xea\x72\x8e\xb8\x60\x29\x02\xc6\x11\xdb\xef\xbf\xcc\x6c\x5e\x26\x46\x66\x5c\x6a\xdf\x23\x72\x07\xf4\xe3\xb8\x3d\xf5\xa0\xea\xef\x08\xf5\x90\x00\x63\x55\xe6\xb6\xcb\xd7\xb9\x06\xf1\xb4\x7e\xcd\x49\x77\x85\x1b\xbd\x90\x27\x74\xc1\x26\xda\xd2\xcd\x3b\x4e\x3b\x91\xb8\xc8\x85\x6b\x78\x3d\xa2\x80\x70\x01\x1a\x2c\xd3\x1d\xcc\x16\x7e\x9d\x20\x56\x34\x06\x53\x20\xb1\x82\xd3\x17\x51\xfa\x26\xe1\x39\x67\xa7\xfe\xd9\x73\xed\x55\x37\x1e\x44\xdf\x9b\xf0\xcc\x50\xf1\x18\x29\x6a\xa8\x9f\x75\x10\x46\x8d\xc8\x25\x31\x36\x93\xa6\x85\x1d\xc2\x37\xa6\x6b\xea\x0c\x51\xb3\xd3\xd4\x7d\xfe\x0b\x18\xcd\x5c\x73\x63\x24\xb3\xdd\x46\xea\x23\xd7\xa8\xdf\x4d\x94\x89\x35\x5f\xf6\xc7\x7d\xd3\xca\x09\x71\x2c\xd7\x50\xf1\x7d\x64\xc7\xef\xcf\xfd\xc8\xba\xf8\x81\x0a\xd9\x6f\xe7\xd0\x29\x24\x50\x09\xdc\x7f\x3c\xa2\xb9\xff\xd2\x9c\x52\x75\x95\x26\x96\xdb\x99\xad\xec\xcc\x90\x9b\x7a\x0e\xbc\xfd\x86\xf9\xdc\xc1\xa6\x3f\x39\xbb\xff\x15\x72\xde\x1a\xd1\x7e\xb6\x3b\x0c\x1f\xdf\xbb\xbc\x81\x8f\xef\xed\x2c\xbf\x34\x4d\xe5\x60\xdc\x7d\xb7\x27\xaa\xbb\x39\x6f\x9c\x4c\x75\xe0\xdb\x24\xe3\x76\x32\x70\x81\x2d\x00\xa3\x6c\xe5\x5b\xd2\xc7\xb0\xda\x93\xa7\x79\x8e\x79\xbb\xb6\x82\xf9\xb6\x17\xda\x36\x29\xda\x0b\x56\x14\x6c\x83\x73\xf5\x55\xd9\xf0\x99\x2a\xf8\x0b\x8e\x0b\xf3\xc7\x83\xbb\x41\x8f\x84\xee\x30\xc1\x8f\xf8\xcf\x0a\xeb\x64\xcf\x0c\x97\xfa\xae\xe8\x79\x25\x95\xab\x9a\x61\x33\x33\x9b\xa4\x77\xfd\x7a\x20\xce\x61\x8b\x9d\xf9\x04\x43\x90\xbc\xab\x96\xe0\xb5\x5b\x46\x82\x49\x6d\x37\xb2\x57\xb5\xf7\xb5\xc5\xfa\xa6\x1c\x22\x56\x4a\x8f\xa3\xdf\xf7\x35\x5c\x70\xd4\xfd\x0d\x08\x36\x78\x5e\xb7\xf2\x04\x10\x70\xb4\x81\xb7\x77\x77\x37\xbd\x9f\x19\x37\xa4\x42\x22\x9a\x23\xde\x04\xef\xcd\xd9\xfa\xff\x82\xe4\x15\x86\x9f\x7b\x1c\x0a\xe6\x67\x3b\x18\x65\xf0\x5f\x58\xa0\x42\x28\x9e\x3d\xc4\xc8\x0b\x22\xfe\x8f\x29\x1d\x35\x17\xee\x0f\xd6\x67\x67\x0a\x7f\x51\xa0\x65\xf3\x72\x24\xa1\x65\xa5\x0f\x7d\x88\xfa\xb0\xa7\x7e\xc3\x60\x02\x27\x4a\x55\xf5\x2f\x47\x1b\xf5\x8f\x56\xe3\x64\xd2\x3c\x29\x14\x3b\xf7\x3d\xa1\x02\x9e\x09\xc7\x7e\x5b\xd2\xae\x6a\xcf\xe1\x52\x08\x35\x95\x6d\xc4\x7d\x33\xd8\xd4\xb1\xeb\xcf\xcf\x76\x31\xe0\x67\xb5\xba\x5a\x13\xbd\xbb\xc3\xe8\x03\xe6\xb2\x7b\x3d\x82\x64\x7d\x64\xef\x5c\xf7\x23\xf5\xf2\xda\x4b\x6f\x9d\x77\x0e\x77\x2b\x0c\x5f\xce\x58\x89\xe9\x46\x3f\xdf\xa8\x6c\xef\x2b\xea\xbe\x7e\x1b\x68\xfe\x74\x3c\x87\x7a\x12\x73\x8a\x0a\xc0\x6a\x15\x78\x0e\x1f\xea\xc5\x94\x71\x44\x1a\x14\xe3\x14\xf5\x97\xaa\xcd\x5b\x80\x4e\x3d\x47\x03\x27\x29\x8c\x4a\x92\xb3\xcc\x07\x9c\xa8\x68\x04\xa0\x55\xc1\x86\xbf\x0d\xe0\x5c\x36\x99\x27\xd6\xd2\x2e\xcc\x4d\xd3\xbc\xcd\x04\x61\xa5\x73\xe5\x74\x14\x68\xaf\xd2\x36\x13\x3a\x96\xd6\xe3\xb0\x63\xd5\xde\xcd\xb6\xc7\xae\xf5\x23\x09\x89\x2e\x48\x3d\xcc\x3c\x61\x29\x86\x4a\x88\x2e\x42\xc5\x8b\xa7\xd4\x7f\x10\x7c\xe0\x42\x0c\xcf\x5e\xcb\x1e\xd1\xd3\x6f\x42\x37\x1b\x8f\xfe\xc3\x5d\xfb\x54\x4f\xb9\x21\x39\x72\x3b\xea\xb6\x3e\xf8\xbf\x9b\x35\x77\x4f\xca\xde\xfd\x7e\x73\x71\x0e\x37\x4c\x08\x7d\xe1\x5b\xe7\xa5\xc5\x95\x5c\x17\x13\x58\x49\x59\x4e\xe0\x3f\x42\xb9\x6d\x12\x7f\x91\x13\x10\x0f\xae\x17\xd4\x8f\x2f\xc7\xee\x0a\x55\x72\xc5\x38\xf9\x6a\x0c\xec\x1e\x6f\x0f\x5f\xbd\x82\xd3\xb3\x33\x54\xf5\xe3\xff\xce\x0d\xa4\xa1\x70\xde\x58\x55\xb3\x67\xc7\x2a\xa9\xdc\xc0\x99\x2a\xff\x6c\x02\x98\xc8\x15\xe6\xba\x9c\xca\xe1\xdb\xa2\x75\x11\x08\x3c\x25\x00\x45\xed\x17\xfc\x3e\xfd\xf0\xde\x12\xfe\x4e\xde\x3a\x08\xe3\x84\xd2\x90\x6a\xdf\x4e\x15\x4e\x3f\x6c\xac\x10\x53\x32\x92\x02\xfc\xfe\x5c\x56\x7d\x4e\x51\xdf\x90\xaf\x59\xd4\x1f\xc1\x9c\x73\x07\x93\x2b\x58\x8a\xa9\x24\x72\xab\x17\xfb\x93\xae\x83\x3c\xd1\x5b\x0d\x6d\x72\x31\xa1\x42\x62\x94\xeb\xc3\xd2\xbb\x74\xfe\x66\x15\xd1\xfe\x60\x3a\x4b\x7d\x9d\x9c\x89\x1a\xd4\x27\xdb\xd6\x48\xbe\x84\x17\xed\x46\xa7\x67\x6f\xec\x87\x69\xe4\x1c\x67\x9b\xb5\x00\x77\x75\x83\x3d\xa2\xd0\x76\xbb\xe9\x24\x73\x24\x56\x6d\x26\x53\x1d\xb8\xa8\x27\xa3\xc8\x8d\xf7\x48\x1c\x7b\x22\x3c\x27\x54\x0a\x27\xb3\x09\x4f\xe9\xab\x44\x65\xce\x2a\xe7\x53\x6a\x89\x28\xf6\x64\x7e\xc6\xa5\x5a\xb5\xd7\x77\x3b\x97\x2b\x34\xc7\x92\x64\xa8\x28\xb6\x30\xdf\x76\xed\xe1\x55\x7d\x25\x5a\x7b\xcd\xa0\x9e\x72\xdb\xfb\x92\xd6\x44\xbe\x10\xf7\xa4\xac\x0f\xfa\xe3\xbc\xe1\xd5\xd7\xab\xb9\x4e\x0b\x7c\x27\xe9\x43\x8a\x6e\x62\x73\x6c\x01\xff\x6a\x37\xeb\xe1\xbf\x7a\x83\x5e\x99\xed\xbf\x27\xed\x5e\xfd\x44\xe9\xa0\xe7\xe6\x3f\x7e\xbb\xf8\xf8\xcb\x0f\xa8\xa7\x1f\xa3\xaa\xaa\xd4\x7f\xff\xf4\xbf\x01\x00\x00\xff\xff\xe6\xe6\x81\xb5\x37\xc7\x00\x00")

func wski18nResourcesEn_usAllJsonBytes() ([]byte, error) {
    return bindataRead(
        _wski18nResourcesEn_usAllJson,
        "wski18n/resources/en_US.all.json",
    )
}

func wski18nResourcesEn_usAllJson() (*asset, error) {
    bytes, err := wski18nResourcesEn_usAllJsonBytes()
    if err != nil {
        return nil, err
    }

    info := bindataFileInfo{name: "wski18n/resources/en_US.all.json", size: 50999, mode: os.FileMode(420), modTime: time.Unix(1506363546, 0)}
    a := &asset{bytes: bytes, info: info}
    return a, nil
}

var _wski18nResourcesEs_esAllJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func wski18nResourcesEs_esAllJsonBytes() ([]byte, error) {
    return bindataRead(
        _wski18nResourcesEs_esAllJson,
        "wski18n/resources/es_ES.all.json",
    )
}

func wski18nResourcesEs_esAllJson() (*asset, error) {
    bytes, err := wski18nResourcesEs_esAllJsonBytes()
    if err != nil {
        return nil, err
    }

    info := bindataFileInfo{name: "wski18n/resources/es_ES.all.json", size: 0, mode: os.FileMode(420), modTime: time.Unix(1506363546, 0)}
    a := &asset{bytes: bytes, info: info}
    return a, nil
}

var _wski18nResourcesFr_frAllJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8a\xe6\x52\x50\xa8\xe6\x52\x50\x50\x50\x50\xca\x4c\x51\xb2\x52\x50\x4a\xaa\x2c\x48\x2c\x2e\x56\x48\x4e\x2d\x2a\xc9\x4c\xcb\x4c\x4e\x2c\x49\x55\x48\xce\x48\x4d\xce\xce\xcc\x4b\x57\xd2\x81\x28\x2c\x29\x4a\xcc\x2b\xce\x49\x2c\xc9\xcc\xcf\x03\xe9\x08\xce\xcf\x4d\x55\x40\x12\x53\xc8\xcc\x53\x70\x2b\x4a\xcd\x4b\xce\x50\xe2\x52\x50\xa8\xe5\x8a\xe5\x02\x04\x00\x00\xff\xff\x45\xa4\xe9\x62\x65\x00\x00\x00")

func wski18nResourcesFr_frAllJsonBytes() ([]byte, error) {
    return bindataRead(
        _wski18nResourcesFr_frAllJson,
        "wski18n/resources/fr_FR.all.json",
    )
}

func wski18nResourcesFr_frAllJson() (*asset, error) {
    bytes, err := wski18nResourcesFr_frAllJsonBytes()
    if err != nil {
        return nil, err
    }

    info := bindataFileInfo{name: "wski18n/resources/fr_FR.all.json", size: 101, mode: os.FileMode(420), modTime: time.Unix(1506363546, 0)}
    a := &asset{bytes: bytes, info: info}
    return a, nil
}

var _wski18nResourcesIt_itAllJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func wski18nResourcesIt_itAllJsonBytes() ([]byte, error) {
    return bindataRead(
        _wski18nResourcesIt_itAllJson,
        "wski18n/resources/it_IT.all.json",
    )
}

func wski18nResourcesIt_itAllJson() (*asset, error) {
    bytes, err := wski18nResourcesIt_itAllJsonBytes()
    if err != nil {
        return nil, err
    }

    info := bindataFileInfo{name: "wski18n/resources/it_IT.all.json", size: 0, mode: os.FileMode(420), modTime: time.Unix(1506363546, 0)}
    a := &asset{bytes: bytes, info: info}
    return a, nil
}

var _wski18nResourcesJa_jaAllJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func wski18nResourcesJa_jaAllJsonBytes() ([]byte, error) {
    return bindataRead(
        _wski18nResourcesJa_jaAllJson,
        "wski18n/resources/ja_JA.all.json",
    )
}

func wski18nResourcesJa_jaAllJson() (*asset, error) {
    bytes, err := wski18nResourcesJa_jaAllJsonBytes()
    if err != nil {
        return nil, err
    }

    info := bindataFileInfo{name: "wski18n/resources/ja_JA.all.json", size: 0, mode: os.FileMode(420), modTime: time.Unix(1506363546, 0)}
    a := &asset{bytes: bytes, info: info}
    return a, nil
}

var _wski18nResourcesKo_krAllJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func wski18nResourcesKo_krAllJsonBytes() ([]byte, error) {
    return bindataRead(
        _wski18nResourcesKo_krAllJson,
        "wski18n/resources/ko_KR.all.json",
    )
}

func wski18nResourcesKo_krAllJson() (*asset, error) {
    bytes, err := wski18nResourcesKo_krAllJsonBytes()
    if err != nil {
        return nil, err
    }

    info := bindataFileInfo{name: "wski18n/resources/ko_KR.all.json", size: 0, mode: os.FileMode(420), modTime: time.Unix(1506363546, 0)}
    a := &asset{bytes: bytes, info: info}
    return a, nil
}

var _wski18nResourcesPt_brAllJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func wski18nResourcesPt_brAllJsonBytes() ([]byte, error) {
    return bindataRead(
        _wski18nResourcesPt_brAllJson,
        "wski18n/resources/pt_BR.all.json",
    )
}

func wski18nResourcesPt_brAllJson() (*asset, error) {
    bytes, err := wski18nResourcesPt_brAllJsonBytes()
    if err != nil {
        return nil, err
    }

    info := bindataFileInfo{name: "wski18n/resources/pt_BR.all.json", size: 0, mode: os.FileMode(420), modTime: time.Unix(1506363546, 0)}
    a := &asset{bytes: bytes, info: info}
    return a, nil
}

var _wski18nResourcesZh_hansAllJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func wski18nResourcesZh_hansAllJsonBytes() ([]byte, error) {
    return bindataRead(
        _wski18nResourcesZh_hansAllJson,
        "wski18n/resources/zh_Hans.all.json",
    )
}

func wski18nResourcesZh_hansAllJson() (*asset, error) {
    bytes, err := wski18nResourcesZh_hansAllJsonBytes()
    if err != nil {
        return nil, err
    }

    info := bindataFileInfo{name: "wski18n/resources/zh_Hans.all.json", size: 0, mode: os.FileMode(420), modTime: time.Unix(1506363546, 0)}
    a := &asset{bytes: bytes, info: info}
    return a, nil
}

var _wski18nResourcesZh_hantAllJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func wski18nResourcesZh_hantAllJsonBytes() ([]byte, error) {
    return bindataRead(
        _wski18nResourcesZh_hantAllJson,
        "wski18n/resources/zh_Hant.all.json",
    )
}

func wski18nResourcesZh_hantAllJson() (*asset, error) {
    bytes, err := wski18nResourcesZh_hantAllJsonBytes()
    if err != nil {
        return nil, err
    }

    info := bindataFileInfo{name: "wski18n/resources/zh_Hant.all.json", size: 0, mode: os.FileMode(420), modTime: time.Unix(1506363546, 0)}
    a := &asset{bytes: bytes, info: info}
    return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
    cannonicalName := strings.Replace(name, "\\", "/", -1)
    if f, ok := _bindata[cannonicalName]; ok {
        a, err := f()
        if err != nil {
            return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
        }
        return a.bytes, nil
    }
    return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
    a, err := Asset(name)
    if err != nil {
        panic("asset: Asset(" + name + "): " + err.Error())
    }

    return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
    cannonicalName := strings.Replace(name, "\\", "/", -1)
    if f, ok := _bindata[cannonicalName]; ok {
        a, err := f()
        if err != nil {
            return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
        }
        return a.info, nil
    }
    return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
    names := make([]string, 0, len(_bindata))
    for name := range _bindata {
        names = append(names, name)
    }
    return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
    "wski18n/resources/de_DE.all.json": wski18nResourcesDe_deAllJson,
    "wski18n/resources/en_US.all.json": wski18nResourcesEn_usAllJson,
    "wski18n/resources/es_ES.all.json": wski18nResourcesEs_esAllJson,
    "wski18n/resources/fr_FR.all.json": wski18nResourcesFr_frAllJson,
    "wski18n/resources/it_IT.all.json": wski18nResourcesIt_itAllJson,
    "wski18n/resources/ja_JA.all.json": wski18nResourcesJa_jaAllJson,
    "wski18n/resources/ko_KR.all.json": wski18nResourcesKo_krAllJson,
    "wski18n/resources/pt_BR.all.json": wski18nResourcesPt_brAllJson,
    "wski18n/resources/zh_Hans.all.json": wski18nResourcesZh_hansAllJson,
    "wski18n/resources/zh_Hant.all.json": wski18nResourcesZh_hantAllJson,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
    node := _bintree
    if len(name) != 0 {
        cannonicalName := strings.Replace(name, "\\", "/", -1)
        pathList := strings.Split(cannonicalName, "/")
        for _, p := range pathList {
            node = node.Children[p]
            if node == nil {
                return nil, fmt.Errorf("Asset %s not found", name)
            }
        }
    }
    if node.Func != nil {
        return nil, fmt.Errorf("Asset %s not found", name)
    }
    rv := make([]string, 0, len(node.Children))
    for childName := range node.Children {
        rv = append(rv, childName)
    }
    return rv, nil
}

type bintree struct {
    Func     func() (*asset, error)
    Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
    "wski18n": &bintree{nil, map[string]*bintree{
        "resources": &bintree{nil, map[string]*bintree{
            "de_DE.all.json": &bintree{wski18nResourcesDe_deAllJson, map[string]*bintree{}},
            "en_US.all.json": &bintree{wski18nResourcesEn_usAllJson, map[string]*bintree{}},
            "es_ES.all.json": &bintree{wski18nResourcesEs_esAllJson, map[string]*bintree{}},
            "fr_FR.all.json": &bintree{wski18nResourcesFr_frAllJson, map[string]*bintree{}},
            "it_IT.all.json": &bintree{wski18nResourcesIt_itAllJson, map[string]*bintree{}},
            "ja_JA.all.json": &bintree{wski18nResourcesJa_jaAllJson, map[string]*bintree{}},
            "ko_KR.all.json": &bintree{wski18nResourcesKo_krAllJson, map[string]*bintree{}},
            "pt_BR.all.json": &bintree{wski18nResourcesPt_brAllJson, map[string]*bintree{}},
            "zh_Hans.all.json": &bintree{wski18nResourcesZh_hansAllJson, map[string]*bintree{}},
            "zh_Hant.all.json": &bintree{wski18nResourcesZh_hantAllJson, map[string]*bintree{}},
        }},
    }},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
    data, err := Asset(name)
    if err != nil {
        return err
    }
    info, err := AssetInfo(name)
    if err != nil {
        return err
    }
    err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
    if err != nil {
        return err
    }
    err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
    if err != nil {
        return err
    }
    err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
    if err != nil {
        return err
    }
    return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
    children, err := AssetDir(name)
    // File
    if err != nil {
        return RestoreAsset(dir, name)
    }
    // Dir
    for _, child := range children {
        err = RestoreAssets(dir, filepath.Join(name, child))
        if err != nil {
            return err
        }
    }
    return nil
}

func _filePath(dir, name string) string {
    cannonicalName := strings.Replace(name, "\\", "/", -1)
    return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

