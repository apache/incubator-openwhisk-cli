apply plugin: 'scala'
apply plugin: 'application'
 
repositories {
    mavenCentral()
}

sourceSets {
    main {
        scala {
            srcDirs = ['src/']
        }
        resources {
            srcDirs = ['src/']
        }
    }
}

dependencies {
    compile project(':common:scala')
}

mainClassName = "whisk.core.controller.Controller"
startScripts {
    doLast {
        def lines = unixScript.readLines()
        lines[lines.size()-1] = lines.last() + ' >> /logs/' + project.name + '_logs.log 2>&1'
        unixScript.text = lines.join("\n")
    }
}

def dockerImageName = project.name
def dockerRegistry =  project.hasProperty('dockerRegistry') ? dockerRegistry + '/' : ''
def dockerImageTag = project.hasProperty('dockerImageTag') ? dockerImageTag : 'latest'

task distDocker(dependsOn:[distTar, ':common:scala:distDocker'], type:Exec) {
    commandLine 'docker', 'build', '-t', 'whisk/' + dockerImageName + ':' + dockerImageTag, '.'
}
task pushImage(type:Exec) {
    commandLine 'docker', 'push', dockerRegistry + 'whisk/' + dockerImageName + ':' + dockerImageTag
}
pushImage.onlyIf { dockerRegistry != '' }
distDocker.finalizedBy pushImage